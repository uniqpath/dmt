{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.html",
    "../src/ImagePreload.html",
    "../src/InfoBar.html",
    "../../navigation/src/ActionBar.html",
    "../../navigation/src/Sidebar.html",
    "../../dynamics/src/NearbyDevices.html",
    "../../home/src/Home.html",
    "../../ambience/src/Ambience.html",
    "../../apps/src/AppList.html",
    "../../device/src/Device.html",
    "../../clock/src/Clock.html",
    "../../help/src/Help.html",
    "../../player/src/Player.html",
    "../../navigation/src/ConnectionIndicator.html",
    "../../navigation/src/TileBar.html",
    "../../player/src/VolumeWidget.html",
    "../../navigation/src/Escape.html",
    "../../player/src/PlayInfo.html",
    "../../player/src/SidebarBottom.html",
    "../../device/src/SidebarMenu.html",
    "../../dynamics/src/Notifications.html",
    "../../navigation/src/DeviceInfo.html",
    "../../device/src/WifiSetup.html",
    "../../player/src/RibbonTop.html",
    "../../player/src/RibbonCurrentSelectionAndMissing.html",
    "../../device/src/NearbySensors.html",
    "../../widgets/src/Suntime.html",
    "../../widgets/src/TemperatureReading.html",
    "../../player/src/MediaTimePosition.html",
    "../../widgets/src/TimeAndDate.html",
    "../../widgets/src/IotActions.html",
    "../../widgets/src/AnalogClock.html",
    "../../widgets/src/PeerList.html",
    "../../navigation/src/NearbyHandyLinks.html",
    "../../widgets/src/ApWifiCredentials.html",
    "../../widgets/src/Calendar.html"
  ],
  "sourcesContent": [
    "<svelte:head>\n  <title>{selectedDeviceName ? `${selectedDeviceName} - ${$view}` : 'DMT'}</title>\n</svelte:head>\n\n<div id=\"app\" class:preventPointerEvents=\"preventPointerEvents\">\n\n  <ActionBar on:select=\"select(event.view)\"/>\n\n  <NearbyDevices />\n\n  <Sidebar>\n    <div slot=\"sidebar_menu\">\n      <SidebarMenus />\n    </div>\n    <div slot=\"sidebar_bottom\">\n      <SidebarBottoms />\n    </div>\n  </Sidebar>\n\n  {#if errors && errors.length > 0}\n    <div class=\"errors\">\n      {#each errors.slice(0, 3) as error}\n        <div class=\"error\" class:cors_problem=\"error.corsProblem\">\n          <div class=\"title\">\n            Error at <span class=\"time\">{error.time}</span>\n            <span class=\"msg\">{error.msg}</span>\n          </div>\n\n          {#if error.stacktrace}\n            {error.stacktrace}\n          {/if}\n        </div>\n      {/each}\n    </div>\n  {/if}\n\n  {#if $view == 'home'}\n\n    {#if $device}\n      <Home on:select=\"select(event.view)\"/>\n    {/if}\n\n  {:else}\n\n    <div class=\"content_component\" class:dim_background=\"viewDef && viewDef.dimBackground\" class:has_full_sidebar=\"viewDef && viewDef.sidebar == 'true'\">\n      {#if $view == 'player'}\n        <Player on:select=\"select(event.view)\"/>\n      {:elseif $view == 'clock'}\n        <Clock on:select=\"select(event.view)\"/>\n      {:elseif $view == 'apps'}\n        <Apps />\n      {:elseif $view == 'ambience'}\n        <Ambience on:select=\"select(event.view)\"/>\n      {:elseif $view == 'help'}\n        <Help on:select=\"select(event.view)\"/>\n      {:elseif $view == 'device'}\n        <Device on:select=\"select(event.view)\" />\n      {/if}\n    </div>\n\n  {/if}\n\n  {#if $thisDeviceState && $thisDeviceState.device && $thisDeviceState.device.showFrontendLog}\n    <InfoBar />\n  {/if}\n\n  <!-- wallpapers preload -->\n  {#if wallpapers}\n    {#each wallpapers as wallpaper}\n      {#if wallpaper}\n        <ImagePreload path=\"{wallpaper}\"/>\n      {/if}\n    {/each}\n  {/if}\n\n</div>\n\n<script>\n\nimport ActionBar from '../../navigation/src/ActionBar.html';\nimport Sidebar from '../../navigation/src/Sidebar.html';\nimport SidebarMenus from '../../navigation/src/SidebarMenus.html';\nimport SidebarBottoms from '../../navigation/src/SidebarBottoms.html';\n\nimport NearbyDevices from '../../dynamics/src/NearbyDevices.html';\n\nimport Home from '../../home/src/Home.html';\nimport Player from '../../player/src/Player.html';\nimport Clock from '../../clock/src/Clock.html';\nimport Apps from '../../apps/src/AppList.html';\nimport Ambience from '../../ambience/src/Ambience.html';\nimport Help from '../../help/src/Help.html';\nimport Device from '../../device/src/Device.html';\n\nimport ImagePreload from './ImagePreload.html';\n\nimport InfoBar from './InfoBar.html';\n\nimport { util, css, ConnectedStore } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n\n    this.scope = 'home'\n\n    this.store.entangle(this); // was added later because of ImagePreload ($wallpapers)\n\n    // https://stackoverflow.com/a/3375140\n    // DISABLE ANNOYING SELECTIONS ON TOUCH SCREENS\n    // todo: see if this css-solution also works: https://stackoverflow.com/a/13068082\n    const checkRPi = () => {\n      if(this.get().loaded) {\n        if(this.get().atRPi) {\n          // window.onload = function() {\n            document.onselectstart = function() {return false;} // ie\n            document.onmousedown = function() {return false;} // mozilla\n          // }\n        }\n      } else {\n        setTimeout(checkRPi, 1000);\n      }\n    }\n\n    setTimeout(checkRPi, 500);\n\n    ////// ***************\n    //////// optimization option (maybe)... entangle only once at the  ?!\n    ////// ***************\n\n    document.addEventListener('click', (e) => {\n      // report any user action for purpose of detecting \"user idle\" -- for example we jump to homescreen\n      // if user is idle for long enough (if we enabled this option in .def file)\n      this.store.guiEngaged();\n    });\n\n    this.set({ errors: [] })\n    //this.set({ errors: [], showDetails: localStorage.getItem('hidePlayerInfoPanel') != 'true' })\n\n    window.onerror = (msg, file, line, col, error) => {\n\n      const { errors } = this.get();\n\n      const d = new Date();\n      const time = `${d.getHours()}:${('0' + d.getMinutes()).slice(-2)}`;\n\n      if (error && error.stack) {\n        errors.push({ msg, stacktrace: error.stack, time });\n\n        setTimeout(() => {\n          //console.log(this.store.get().localBrowserTime);\n          // console.log(error.stack);\n\n          this.store.signal('action', { action: 'errors', scope: 'gui', payload: error.stack });\n        }, 300) // we wait for the store to connect! we could still miss some messages by sending to currently unconnected store though\n      } else {\n        errors.push({ msg: `\"${msg}\" (No more info because of CORS, fix: 1) check for the same error on device where gui runs on :80... 2) if more possible errors from this source, then rethrow - see example in dmt-connect/browser/connect around JSON.parse(msg))`, corsProblem: true, time });\n      }\n\n      this.set({ errors });\n\n      // COPIED FROM SOMEWHERE ELSE FOR REFERENCE, MAYBE REMOVE IN THE FUTURE...\n      // if we don't do this and we get GUI from different port than 80 (7777) for example, then window.onerror will only get:\n      // \"Script error.\" message without the error object\n      // read more here: https://blog.sentry.io/2016/05/17/what-is-script-error\n      // } else {\n      //   log.error(errMsg);\n      //   log.write(e);\n      // }\n\n      //return true; // means we caught the error and console won't show it anymore ....\n    };\n\n    // setTimeout(() => {\n    //   throw new Error(\"BOOM!\")\n    // }, 3000)\n    // throw new Error(\"BOOM!\");\n\n    window.onpopstate = (event) => {\n      this.saveGetParams();\n      if(!event.state) { // not sure why the first popstate doesn't include anything...\n        this.switchView(this.scope);\n        return;\n      }\n      this.switchView(event.state.view);\n    };\n\n    const path = window.location.pathname.replace(/\\//g, '') // \"/home/\"\" => \"home\"\n\n    // used in multi-connected store reload, to keep connection to correct store!\n    const urlParams = new URLSearchParams(window.location.search);\n    const deviceKey = urlParams.get('deviceKey');\n    const initialIp = urlParams.get('ip');\n    const port = urlParams.get('port');\n    if(initialIp) {\n      setTimeout(() => {\n        const deviceName = urlParams.get('deviceName');\n        this.store.switch({ deviceKey, ip: initialIp, port, deviceName })\n        //this.store.switch({ ip: '192.168.0.80' })\n      }, 100);\n    }\n\n    this.saveGetParams();\n    this.switchView(path || this.scope);\n\n    // showDetails attribute is connected to the \"alien panel\" --\n    // if the panel is open, then more song information is visible\n    // (for example: duration)\n    // this.store.bus.on('showPlayerDetails', (showDetails) => {\n    //   this.set({ showDetails });\n    // });\n  },\n  components: {\n    Home,\n    Player,\n    Device,\n    Clock,\n    Apps,\n    Ambience,\n    Help,\n    ActionBar,\n    Sidebar,\n    SidebarMenus,\n    SidebarBottoms,\n    NearbyDevices,\n    ImagePreload,\n    InfoBar\n  },\n  methods: {\n    saveGetParams() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const getParams = {\n        subview: urlParams.get('subview'),\n        q: urlParams.get('q')\n      }\n      this.store.set({ getParams });\n    },\n    switchView(view) {\n      this.store.switchView(view);\n    },\n    select(view) {\n      this.switchView(view);\n    }\n  }\n};\n\n</script>\n\n<style>\n\n:root {\n  --warning: #E34042;\n  --dmt-red: #E34042;\n  --dmt-warning-pink: #EFCAF8;\n  --dmt-orange: #E5AE34;\n\n  --dmt-navy: #41468F;\n  /*--dmt-navy: #199EFF;\n  --dmt-navy: #199EFF;*/\n  --dmt-navy2: #292C5A;\n  --dmt-cyan: #29B3BF;\n  /*--dmt-bright-cyan-prev: #3EFFE5;*/\n  --dmt-bright-cyan: #3DFFEC;\n  --dmt-violet: #873BBF;\n  --dmt-violet-dark: #2E1740;\n\n  --dmt-lighter-magenta: #CAD2FF;\n\n  --dmt-vibrant-green: #5FE02A;\n  --dmt-cool-green: #5DF699;\n  --dmt-cool-cyan: #51F5C8;\n  --dmt-cool-cyan2: #58E288;\n\n  --zeta-green: #31E5C1;\n  --zeta-green-highlight: #34FED7;\n  --zeta-green_check: #32E6BE;\n\n  --search-input-width: 330px;\n}\n\n#app.preventPointerEvents {\n  pointer-events: none;\n}\n\n.errors {\n  width: 700px;\n  margin: 0 auto;\n}\n\n.errors .error {\n  padding: 20px;\n  margin-top: 10px;\n  background-color: #983128;\n  color: white;\n  border-radius: 10px;\n  color: #bbb;\n  word-break: break-word;\n}\n\n.errors .error.cors_problem {\n  background-color: #424DE6;\n}\n\n.error .title {\n  color: #1E0B01;\n  margin-bottom: 5px;\n}\n\n.error .title .msg {\n  color: white;\n}\n\n.error .title .time {\n  background-color: #444;\n  padding: 2px 4px;\n  color: white;\n}\n\n.content_component {\n  position: fixed;\n  top: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.content_component.dim_background {\n  background-color: #222;\n  opacity: 0.9;\n}\n\n.content_component.has_full_sidebar {\n  left: 300px;\n}\n\n</style>\n",
    "<div class=\"image\" style=\"background-image: url('{path}')\">\n  {path}\n</div>\n\n<script>\n\nimport { css } from '../../+legacyLib';\n\nexport default {\n  oncreate() {}\n};\n</script>\n\n<style>\n\n.image {\n  display: none;\n}\n\n</style>\n",
    "<div id=\"info_bar\" on:click=\"close()\">\n  <h3>{$thisDeviceState && $thisDeviceState.device ? $thisDeviceState.device.deviceName : \"\"} <span>— frontend debug log</span></h3>\n\n  {#if frontendLog}\n    {#each frontendLog as line}\n      <div class=\"line\">\n        {line}\n      </div>\n    {/each}\n  {/if}\n</div>\n\n<script>\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n\n  methods: {\n    close() {\n      this.store.signalLocalDevice('action', { action: 'close_frontend_log', scope: 'gui' });\n    }\n  },\n\n  helpers: {\n    //\n  },\n\n  components: {\n    //\n  }\n};\n</script>\n\n<style>\n\nh3 span {\n  color: #444;\n}\n\n#info_bar {\n  z-index: 50000;\n  position: absolute;\n  bottom: 0;\n\n  color: black;\n  padding: 10px;\n  box-sizing: border-box;\n  width: 100%;\n  height: 550px;\n  background-color: #40B18D;\n  font-size: 0.9em;\n  opacity: 0.9;\n  overflow: hidden;\n}\n\n</style>\n",
    "<svelte:window on:keydown=\"handleKeypress(event)\"/>\n\n{#if loaded}\n\n  <ConnectionIndicator on:escape=\"select('home')\" />\n\n  {#if $connected}\n\n    {#if $view == 'home'}\n      <div class=\"selector\">\n        <TileBar on:select=\"select(event.view)\">\n          <VolumeWidget/>\n          <PeerList />\n        </TileBar>\n      </div>\n    {:else}\n      <Escape on:escape=\"select('home')\" />\n    {/if}\n\n  {/if}\n\n{/if}\n\n<script>\n\nimport ConnectionIndicator from './ConnectionIndicator.html';\nimport TileBar from './TileBar.html';\nimport Escape from './Escape.html';\nimport VolumeWidget from '../../player/src/VolumeWidget.html';\nimport PeerList from '../../widgets/src/PeerList.html';\n\n// via rollup-plugin-image-base64\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    // adds thisDeviceName, selectedDeviceKey and selectedDeviceName to the component store\n    this.store.entangle(this);\n\n    this.store.set({ nearbyDevicesMenuVisible: true });\n  },\n  methods: {\n    handleKeypress(event) {\n      if(util.isInputElementActive()) {\n        return\n      }\n\n      if(event.key && !event.altKey && !event.metaKey && !event.shiftKey) {\n        if(event.keyCode == 9) {\n          event.preventDefault()\n          this.store.switchToggle();\n        }\n        if(event.key == 't') {\n          this.store.switch();\n        }\n        if(event.key == 'f') {\n          console.log(\"implement device filter / find (in nearby list or just in the middle of screen)!!\");\n        }\n        if(event.key == 'p') {\n          this.select('player');\n        }\n        if(event.key == 'o') {\n          this.select('clock');\n        }\n        if(event.key == 'd') {\n          this.select('device');\n        }\n      }\n    },\n    select(view) {\n      this.fire('select', { view });\n    }\n  },\n  components: {\n    ConnectionIndicator,\n    TileBar,\n    VolumeWidget,\n    PeerList,\n    Escape\n  }\n};\n</script>\n\n<style>\n#state_received_indicator {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 10000;\n  color: #FFDA2E;\n}\n\n.selector {\n  width: 300px;\n  position: fixed;\n  top: 0;\n  right: 0;\n}\n\n@media only screen and (max-width: 640px) {\n  #menu {\n    display: none;\n  }\n}\n\n#menu {\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n}\n\n#menu_options {\n  position: absolute;\n  right: 45px;\n  bottom: 150px;\n}\n\n#menu img {\n  width: 120px;\n  padding: 20px;\n  cursor: pointer;\n}\n\n</style>\n",
    "{#if $device && viewDef && viewDef.sidebar}\n\n  {#if viewDef.sidebar != 'top-only' && viewDef.sidebar != 'top-only-transparent'}\n    <div class=\"sidebar_vertical_space\"/>\n  {/if}\n\n  <div class=\"sidebar_bottom\">\n    <slot name=\"sidebar_bottom\"><!-- content for the bottom of sidebar is injected here --></slot>\n  </div>\n\n  <div class=\"sidebar\">\n    <div class=\"sidebar_top_info\" class:top_only_with_background=\"(viewDef.sidebar == 'top-only' || viewDef.protectVisibility) && $connected\">\n\n      <DeviceInfo />\n\n    </div>\n\n    <slot name=\"sidebar_menu\"><!-- main sidebar content is injected here --></slot>\n\n    <!-- // ⚠️ #HARDCODED -->\n    {#if $thisDeviceState && $thisDeviceState.device && (['turbine', 'tablica', 'andreja', 'epanel', 'eclipse'].includes($thisDeviceState.device.deviceName))}\n\n      {#if $thisDeviceState && $thisDeviceState.device && $thisDeviceState.device.network == 'zaboric'}\n        <div class=\"blinds\">\n          <h2>Rolete</h2>\n          <button on:click=\"action('ap1-blinds2-up')\">Leva ↑</button>\n          <button on:click=\"action('ap1-blinds1-up')\">Desna ↑</button>\n          <br>\n          <button on:click=\"action('ap1-blinds2-down')\">Leva ↓</button>\n          <button on:click=\"action('ap1-blinds1-down')\">Desna ↓</button>\n        </div>\n      {/if}\n\n      {#if $nearbyDevices && $nearbyDevices.length > 0 && $nearbyDevices.find(({ deviceName }) => ['kids', 'eclipse'].includes(deviceName))} <!-- warning: duplicate name of computer, see below  -->\n        <div class=\"family_computer\">\n          <h2>Ugasni računalnik</h2>\n\n          {#if $nearbyDevices.find(({ deviceName }) => deviceName == 'eclipse')}\n            <button on:click=\"sleepComputer('eclipse')\">■ eclipse</button>\n          {/if}\n\n          {#if $nearbyDevices.find(({ deviceName }) => deviceName == 'kids')}\n            <button on:click=\"sleepComputer('kids')\">■ kids</button>\n          {/if}\n        </div>\n      {/if}\n\n      <!-- {#if $nearbyDevices && $nearbyDevices.length > 0 && $nearbyDevices.find(({ deviceName }) => deviceName == 'otroska')}\n        <div class=\"family_computer\">\n          <h2>Otroška soba</h2>\n          <button on:click=\"sleepingProgram()\">😴 SPANJE</button>\n        </div>\n      {/if} -->\n\n    {/if}\n\n    <div class=\"notifications\">\n      <Notifications />\n    </div>\n\n    {#if $connected && environment && (!$guiNotifications || ($guiNotifications && $guiNotifications.length == 0))}\n      <div id=\"environment_widget\">\n        {#each environment as tempData}\n          <TemperatureReading {tempData} />\n        {/each}\n      </div>\n    {/if}\n\n  </div>\n\n{:else}\n\n  <!-- home view -->\n\n  <div class=\"sidebar\">\n\n    <div class=\"notifications\">\n      <Notifications />\n    </div>\n\n    {#if $connected && environment && (!$guiNotifications || ($guiNotifications && $guiNotifications.length <= 5))}\n      <div id=\"environment_widget\">\n        {#each environment.slice(1) as tempData}\n          <TemperatureReading {tempData} />\n        {/each}\n      </div>\n    {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nimport DeviceInfo from './DeviceInfo.html';\nimport Notifications from '../../dynamics/src/Notifications.html';\nimport TemperatureReading from '../../widgets/src/TemperatureReading.html';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n  methods: {\n    action(action) {\n      //console.log(`sending: ${action}`);\n      const [ placeId, blindsId, blindsDirection ] = action.split('-');\n      const payload = { placeId, blindsId, blindsDirection, blindsAction: \"move\" };\n      this.store.signal('action', { action: 'command', scope: 'blinds', payload });\n    },\n    sleepComputer(deviceName) {\n      //console.log(`sending: ${action}`);\n      this.store.signal('action', { action: 'sleep', scope: 'nearbyDevices', payload: deviceName }); // <!-- warning: name of computer is duplicate, see above  -->\n    },\n    sleepingProgram() {\n      //console.log(`sending: ${action}`);\n      this.store.signal('action', { action: 'sleeping_program', scope: 'iot', payload: 'otroska' }); // <!-- warning: name of computer is duplicate, see above  -->\n    }\n  },\n  components: {\n    DeviceInfo,\n    Notifications,\n    TemperatureReading\n  },\n};\n\n</script>\n\n<style>\n\n.blinds, .family_computer {\n  /*margin-top: 20px;*/\n  margin-left: 20px;\n}\n\n.blinds h2, .family_computer h2 {\n  text-align: center;\n  font-size: 1.2em;\n}\n\n.blinds button {\n  margin-left: 5px;\n}\n\n.blinds button, .family_computer button {\n  margin-bottom: 10px;\n  height: 50px;\n  font-size: 1.3em;\n  background-color: #41468f;\n  color: white;\n  border: 0;\n  border-radius: 5px;\n}\n\n.blinds button {\n  width: 120px;\n}\n\n.family_computer {\n  text-align: center;\n}\n\n.blinds button:hover, .family_computer button:hover {\n  cursor: pointer;\n  opacity: 0.8;\n}\n\n.sidebar {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 300px;\n  z-index: 10000;\n  margin-bottom: 10px;\n}\n\n.sidebar_top_info {\n  margin-bottom: 15px;\n}\n\n.sidebar_top_info.top_only_with_background {\n  background-color: #333;\n  opacity: 0.8;\n  /*height: 250px;*/\n  border-bottom-right-radius: 20px;\n}\n\n.environment_widget {\n  width: 300px;\n}\n\n.notifications {\n  padding-left: 15px;\n}\n\n.sidebar_vertical_space {\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #333;\n  /*opacity: 0.9;*/\n  height: 100%;\n  width: 300px;\n}\n\n.sidebar_bottom {\n  position: absolute;\n  bottom: 0px;\n  left: 0;\n  width: 300px;\n  text-align: center;\n  padding: 20px;\n  width: 260px;\n  padding-bottom: 0px;\n}\n\n</style>\n",
    "<!-- we can disable deviceSelector on a particular view and also globally for device (in service: gui -- nearby  disableDeviceSelector) -- perhaps move the entire service: gui definition to gui.def -->\n\n{#if loaded && $nearbyDevicesMenuVisible && viewDef && viewDef.deviceSelector != 'false'}\n\n  <!-- NEARBY DEVICES -->\n\n  <!-- THIS IS A BIT SPECIAL: WE DON'T SHOW \"OTHER STATE\" BLINDLY, WE EXPLICITELY SHOW LOCAL DEVICE STATE NO MATTER WHAT REMOTE DEVICE WE'RE CURRENTLY 'OBSERVING' IT'S CLEAR BUT STILL IN CODE THIS VIEW IS DIFFERENT FROM MOST OF THE OTHERS (except NOTIFICATIONS WHICH IS SIMILAR, THEY ALWAYS COME FROM \"THIS\" DEVICE STATE)... EVERY OTHER VIEW SHOWS THE CURRENTLY \"TELEPORTED\" DEVICE STATE ------->\n\n  {#if !disableDeviceSelector} <!-- wired via this.store.entangle -->\n\n    {#if $nearbyDevices && $nearbyDevices.length > 0}\n      <div style=\"line-height: {lineHeight}em;\" id=\"nearby_devices\" class:nonRPi=\"!atRPi\">\n        {#each $nearbyDevices.filter(d => d.thisDevice || d.isRPi).sort((a, b) => a.deviceName < b.deviceName ? -1 : (a.deviceName > b.deviceName ? 1 : 0)) as device}\n          <div class=\"device\" style={nearbyDeviceStyles(identifyThisDevice(device))} on:click=\"morphIntoNearbyDevice(device)\">\n\n            {#if device.hasErrors}<span class='error'>!</span>{/if}{device.deviceName}\n\n            {device.playing ? (device.mediaType == 'video' ? ' ▶' : ' ♫' ) : '' }\n\n            <span class=\"ip\">\n              {#if device.ip}\n                {device.ip}\n              {/if}\n            </span>\n          </div>\n        {/each}\n        <div class=\"devices_total\">\n          {nearbyDevicesCount} devices\n        </div>\n      </div>\n    {/if}\n\n  {/if}\n\n{/if}\n\n<div id=\"bottom_icons\">\n\n  <div id=\"deviceSelector\">\n\n    <!-- weird implementation :) -->\n\n    {#if homebaseImgInline}\n      <img class:hidden=\"!homebaseSymbolVisible($view)\" src=\"{homebaseImgInline}\" alt=\"deviceSelector\" on:click=\"toggleNearbyDevices()\">\n    {/if}\n\n    {#if tunnelingImgInline}\n      <img class:hidden=\"!tunnelingSymbolVisible($view)\" src=\"{homebaseImgInline}\" alt=\"deviceSelector\" on:click=\"toggleNearbyDevices()\">\n    {/if}\n\n    {#if homebaseImgInline}\n      <img class:hidden=\"!homebaseEscapeSymbolVisible($connected, $view)\" src=\"{homebaseImgInline}\" alt=\"switchToThisDevice\" on:click=\"switchToThisDevice()\">\n    {/if}\n\n  </div>\n\n</div>\n\n<script>\n// disabled transitions for now because they were causing a big issue for some reason (mixup of 'views' -- home component rendered on top of player and others... ')\n// import { fade, fly } from 'svelte-transitions';\n\nimport { util, def } from '../../+legacyLib';\n\n// via rollup-plugin-image-base64\nimport homebaseImgInline from '../../common_assets/img/icons/homebase-symbol.png';\nimport tunnelingImgInline from '../../common_assets/img/icons/tunneling-symbol.png';\n\nexport default {\n  oncreate() {\n    this.set({ homebaseImgInline, tunnelingImgInline });\n\n    // adds thisDeviceName, selectedDeviceName, and optionally any part of definition (from this device.def)\n    this.store.entangle(this);\n\n    this.set({ lineHeight: '1.2' })\n\n    this.listener = this.store.on('state', ({ current, changed, previous }) => {\n      if(current.thisDeviceState) { // todo: think if we really need to observe all state changes... AND if we get all differences inside thisDeviceState when we observe multiconnected store \"state\" event\n        const nearbyDevices = current.nearbyDevices\n\n        if(nearbyDevices)  {\n\n          // count visible devices (property hiddenInGui : false)... a bit convoluted but it's simple\n          // ?? :\n          const count = nearbyDevices.filter(({ hiddenInGui }) => !hiddenInGui).length;\n\n          this.set({ nearbyDevicesCount: count })\n\n          if(count < 7) {\n            this.set({ lineHeight: '3.2' })\n          } else if(count < 10) {\n            this.set({ lineHeight: '2.4' })\n          } else if(count <= 15) {\n            this.set({ lineHeight: '1.2' })\n          } else {\n            this.set({ lineHeight: '1.0' })\n          }\n        }\n      }\n    });\n\n  },\n  ondestroy() {\n    this.listener.cancel();\n  },\n  helpers: {\n    nearbyDeviceStyles: (el) => getNearbyDeviceStyles(el)\n  },\n  methods: {\n    toggleNearbyDevices() { // duplication from ActionBar.html just to handle the 'd' keypress shortcut !!\n      const isVisible = this.store.get().nearbyDevicesMenuVisible;\n      this.store.set({ nearbyDevicesMenuVisible: !isVisible });\n    },\n    morphIntoNearbyDevice({ deviceName, deviceKey, ip, guiPort }) {\n      if(deviceName == this.get().thisDeviceName) { // todo - change\n        console.log(`Morphing back into /this/ device`)\n        this.store.switch();\n      } else {\n        console.log(`Morphing into ${deviceName}:${ip}`)\n        this.store.switch({ deviceName, deviceKey, ip, port: guiPort }); // we pass deviceName in case we cannot actually connect to device -> se still fill the state with correct name\n      }\n    },\n    switchToThisDevice() {\n      this.store.switch();\n    },\n    dumpInfo() {\n      console.log(this.get());\n    }\n  },\n  computed: {\n    identifyThisDevice: ({ thisDeviceName, selectedDeviceKey, homebase, homebaseName }) => { // hardcore computed property which returns a function which receives further dependent data to calculate the result... this this computed property has some local component store properties and a template object as inputs (template expressions can be used in helpers OR computed properties)\n\n      return (device) => {\n        const addedProps = {\n          // thisDevice: thisDeviceName == device.deviceName,\n          selectedDevice: selectedDeviceKey == device.deviceKey, // todo! use device keys instead!!\n          homebase: homebaseName ? device.deviceName == homebaseName : device.deviceName == thisDeviceName,\n          homebaseName\n        }\n\n        return Object.assign(device, addedProps);\n      }\n    },\n    homebaseSymbolVisible: ({ thisDeviceName, selectedDeviceName, homebase, disableDeviceSelector, viewDef }) => {\n      return (view) => {\n\n        if(disableDeviceSelector || !viewDef || viewDef.deviceSelector == 'false' || !homebase) {\n          return false;\n        }\n\n        return true;\n      }\n    },\n    tunnelingSymbolVisible: ({ homebase, disableDeviceSelector, viewDef }) => {\n      return (view) => {\n\n        if(disableDeviceSelector || !viewDef || viewDef.deviceSelector == 'false' || homebase) {\n          return false;\n        }\n\n        return true;\n      }\n    },\n    homebaseEscapeSymbolVisible: ({ thisDeviceName, selectedDeviceName }) => {\n      return (connected, view) => {\n        if(view == 'home' && thisDeviceName != selectedDeviceName && !connected) {\n          return true;\n        }\n      }\n    }\n  }\n};\n\nconst getNearbyDeviceStyles = ({ stale, hiddenInGui, thisDevice, selectedDevice, homebase, homebaseName, homebaseIsDefined }) => (\n  `\n    color: ${stale ? 'white' : 'black'};\n    font-weight: ${homebase ? 'bold' : 'normal'};\n    font-style: ${homebaseName && thisDevice ? 'italic' : 'normal'};\n    background-color: ${stale ? 'black' : (selectedDevice ? '#26A9B7' : '')};\n    display: ${hiddenInGui ? 'none' : 'block'};\n  `\n);\n</script>\n\n<style>\n\n/* NEARBY DEVICES */\n\n#nearby_devices {\n  z-index: 100000;\n  text-align: center;\n  position: absolute;\n  right: 28px;\n  bottom: 150px;\n  line-height: 2.5em;\n  background-color: #66AEB7;\n  color: black;\n  font-size: 1.0em;\n  border: 4px solid #26A9B7;\n  border-radius: 2px;\n}\n\n#nearby_devices .device {\n  padding: 5px;\n  border-bottom: 1px solid #26A9B7;\n  cursor: pointer;\n}\n\n#nearby_devices.nonRPi .device:hover {\n  background-color: #4EC0B8;\n  cursor: pointer;\n}\n\n#nearby_devices .device:active {\n  background-color: #26A9B7;\n}\n\n#nearby_devices .device .error {\n  background-color: #983128;\n  color: white;\n  padding: 2px 5px;\n  margin-right: 5px;\n}\n\n.ip {\n  color: #333;\n}\n\n.hidden {\n  display: none;\n}\n\n#nearby_devices .devices_total {\n  padding: 2px 5px;\n  background-color: #555;\n  color: white;\n}\n\n#bottom_icons {\n  z-index: 10000;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n}\n\n#bottom_icons div {\n  cursor: pointer;\n}\n\n#bottom_icons div img {\n  width: 120px;\n  padding: 20px;\n  padding-bottom: 12px;\n}\n\n</style>\n",
    "{#if loaded}\n\n  <div id=\"time\" class:protect_visibility=\"viewDef && viewDef.protectVisibility\">\n    <TimeAndDate {timeDate}/>\n  </div>\n\n  {#if $connected && $device}\n\n    {#if $device.serverMode}\n      <div class=\"baloon\" class:nonRPi=\"!atRPi\">\n        <img src=\"/img/hot-air-balloon.png\">\n      </div>\n    {:elseif environment && environment.length > 0}\n\n      <div id=\"environment_widget\" class=\"no_click\">\n        <TemperatureReading tempData={environment[0]} big=true />\n      </div>\n\n    {/if}\n\n    {#if $player}\n      <PlayInfo on:select=\"select(event.view)\" />\n    {/if}\n\n    <Suntime sunrise={timeDate.sunrise} sunset={timeDate.sunset}/>\n\n  {/if}\n\n{/if}\n\n<script>\n\nimport TimeAndDate from '../../widgets/src/TimeAndDate.html';\nimport TemperatureReading from '../../widgets/src/TemperatureReading.html';\nimport Suntime from '../../widgets/src/Suntime.html';\nimport PlayInfo from '../../player/src/PlayInfo.html';\n\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n\n  methods: {\n    go(handle) {\n      window.location.href = `http://${window.location.hostname}:${window.location.port}/${handle}`;\n    },\n    select(view) {\n      this.fire('select', { view })\n    },\n  },\n\n  components: {\n    TimeAndDate,\n    TemperatureReading,\n    Suntime,\n    PlayInfo\n  }\n};\n</script>\n\n<style>\n#tagline {\n  margin: 0 auto;\n  margin-top: 30px;\n  padding: 50px;\n  border-radius: 20px;\n  text-align: center;\n  width: 500px;\n  background-color: var(--dmt-navy);\n  font-size: 1.5em;\n  background: rgb(65,70,143);\n  background: linear-gradient(180deg, rgba(65,70,143,1) 0%, rgba(16,19,19,1) 100%);\n}\n\n.baloon {\n  text-align: center;\n}\n\n.baloon img {\n  display: inline-block;\n  margin: 0 auto;\n}\n\n.submarine img {\n  width: 700px;\n}\n\n.baloon img {\n  width: 300px;\n}\n\n.baloon.nonRPi img {\n  width: 400px;\n}\n\n#time {\n  margin: 0 auto;\n  padding-top: 70px;\n}\n\n#time.protect_visibility {\n  background-color: #222;\n  opacity: 0.8;\n  margin-top: 50px;\n  padding-top: 20px;\n  width: 630px;\n  border-radius: 20px;\n}\n\n#environment_widget {\n  padding-top: 10px;\n  /*cursor: pointer;*/\n  /*display: inline-block;*/\n  width: 500px;\n  margin: 0 auto;\n}\n\n#environment_widget .no_click {\n  /*cursor: default;*/\n}\n\n</style>\n",
    "{#if $connected}\n\n  <div id=\"iot_actions\">\n\n    <IotActions/>\n\n  </div>\n\n{/if}\n\n<script>\nimport TemperatureReading from '../../widgets/src/TemperatureReading.html';\nimport IotActions from '../../widgets/src/IotActions.html';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n  components: {\n    IotActions,\n    TemperatureReading\n  }\n};\n</script>\n\n<style>\n#iot_actions {\n  margin-left: 50px;\n}\n\n#environment_widget {\n  width: 450px;\n}\n</style>\n",
    "{#if $connected}\n\n  <div id=\"app_list\">\n\n    {#if $thisDeviceState && $thisDeviceState.appList}\n      {#each $thisDeviceState.appList as {appName, isUserApp, isDeviceApp, overridesSystemApp, overridesUserApp} }\n        <a href=\"/{appName}\" class:user_app=\"isUserApp\" class:overrides_system_app=\"overridesSystemApp\" class:overrides_user_app=\"overridesUserApp\">\n\n          <h3>{appName}</h3>\n\n          <div class=\"notice\">\n            {#if isDeviceApp}\n              [ dmt device app ]\n            {:elseif isUserApp}\n              [ dmt user app ]\n            {:else}\n              [ dmt system app ]\n            {/if}\n\n            {#if overridesSystemApp}\n              [ ⚠️ overrides system app with the same name ]\n            {/if}\n\n            {#if overridesUserApp}\n              [ ⚠️ overrides user app with the same name ]\n            {/if}\n          </div>\n\n        </a>\n\n      {/each}\n    {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {\n    //console.log($thisDeviceState.appList);\n  },\n  components: {\n\n  }\n};\n</script>\n\n<style>\n#app_list {\n  margin-top: 30px;\n  margin-left: 350px;\n}\n\na {\n  padding: 10px 20px 20px 20px;\n  border-radius: 10px;\n  background-color: #41468F;\n  display: block;\n  margin-top: 20px;\n  width: 400px;\n  text-align: center;\n  color: white;\n  text-decoration: none;\n}\n\na h3 {\n  text-decoration: underline;\n}\n\na .notice {\n  /*position: absolute;*/\n  font-size: 0.7em;\n  color: white;\n  /*text-align: center;*/\n  width: 400px;\n  text-align: center;\n  margin-top: 10px;\n  color: #ddd;\n}\n\na.user_app {\n  background-color: #894B8F;\n}\n\na.overrides_system_app, a.overrides_user_app {\n  background-color: red;\n}\n\na:hover {\n  filter: contrast(1.5);\n  cursor: pointer;\n}\n\na:hover h3 {\n  text-decoration: underline;\n}\n\n</style>\n",
    "{#if loaded}\n\n  <div id=\"device\">\n\n  {#if $connected}\n\n    {#if deviceView == 'device_log' }\n      {#if $log}\n        <pre>\n          <ul>\n            {#each $log as line}\n              <li class=\"line\">{#each parseAnsi(line.msg).spans as span}<span style=\"{span.css}\">{span.text}</span>{/each}</li>\n            {:else}\n              <li>Log is empty</li>\n            {/each}\n          </ul>\n        </pre>\n      {/if}\n\n    {:elseif deviceView == 'network_log' }\n\n      <pre>\n        This information is missing\n      </pre>\n\n    {:elseif deviceView == 'frontend_log' && $device}\n\n      <pre>\n        <h2>{$device.deviceName}</h2>\n      </pre>\n\n      {#if $device.showFrontendLog}\n        <button class:active=\"deviceView == 'frontend_log_close'\" on:click=\"closeFrontendLog()\" class:touch_pressed=\"touchInfo == 'frontend_log_close'\" class=\"close\">Close frontend log</button>\n      {:else}\n        <button class:active=\"deviceView == 'frontend_log_show'\" on:click=\"showFrontendLog()\" class:touch_pressed=\"touchInfo == 'frontend_log_show'\">Show frontend log</button>\n      {/if}\n\n      <pre>\n        To close the frontend log you can also tap or click on the overlay on the device itself.\n      </pre>\n\n    {:elseif deviceView == 'device_state'}\n\n      <!-- Controller state: -->\n\n      <pre>\n        {#if $device}\n          {@html colorJSON($device)}\n        {:else}\n          This information is missing\n        {/if}\n      </pre>\n\n    {:elseif deviceView == 'time_state'}\n\n      <!-- Controller state: -->\n\n      <pre>\n        {#if $time}\n          {@html colorJSON($time)}\n        {:else}\n          This information is missing\n        {/if}\n      </pre>\n\n    {:elseif deviceView == 'player_state'}\n\n      <!-- Player state: -->\n\n      <pre>\n        {#if $player}\n          {@html colorJSON($player)}\n        {:else}\n          This information is missing\n        {/if}\n      </pre>\n\n    {:elseif deviceView == 'nearby_sensors_state'}\n\n      <!-- Nearby sensors state: -->\n\n      {#if $nearbySensors}\n        <NearbySensors sensors=\"{$nearbySensors}\" />\n      {:else}\n        <pre>This information is missing</pre>\n      {/if}\n\n    {/if}\n\n  {/if}\n\n  <!-- We can be disconnected here and we still need to show the information\n  this is for when dmt-next update is executing and we loose the dmt-proc\n  we still need to see the information... perhaps when update is faster, we change\n  this... or move update function outside of wifi_setup -->\n\n  {#if deviceView == 'wifi_setup'}\n    <!-- Wifi setup: -->\n\n    <WifiSetup />\n\n  {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nimport ansicolor from 'ansicolor';\n\nimport { util, css } from '../../+legacyLib';\n\nimport NearbySensors from './NearbySensors.html';\nimport WifiSetup from './WifiSetup.html';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n\n    this.set({ deviceView: 'device_log' }); // default, duplicate in Device.html\n    this.store.on('select_device_view', ({ view }) => this.set({ deviceView: view }));\n  },\n  helpers: {\n    parseAnsi(text) {\n      return ansicolor.parse(text);\n    },\n    colorJSON(text) {\n      return util.colorJSON(text)\n    }\n  },\n  methods: {\n    showFrontendLog() {\n      this.store.signal('action', { action: 'show_frontend_log', scope: 'dmt/gui' });\n    },\n    closeFrontendLog() {\n      this.store.signal('action', { action: 'close_frontend_log', scope: 'dmt/gui' });\n    }\n  },\n  components: {\n    NearbySensors,\n    WifiSetup\n  }\n};\n</script>\n\n<style>\n.error {\n  color: var(--dmt-violet);\n}\n\n#state {\n  background-color: cyan;\n}\n\n#device {\n  font-size: 15px;\n  background-color: #222;\n  padding-left: 10px;\n\n  /* make the div scrollable! */\n  /* https://www.quora.com/How-do-I-make-a-scrollable-table-inside-a-fixed-container-using-CSS */\n  max-height: 100%;\n  overflow: auto;\n}\n\n#device ul {\n  margin: 0;\n  padding: 0;\n}\n\n/* doesn't work - styles are not applied!!! json is parsed correctly and classes (colors) are assigned ok  \nwe did it inline -- this worked! */\n#device span.key {\n  color: red;\n}\n\n#device pre {\n  font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n}\n\nbutton {\n  display: inline-block;\n  margin: 0 auto;\n  background-color: #484E9F;\n  border: 0;\n  color: black;\n  font-size: 1.0em;\n  cursor: pointer;\n  height: 2em;\n  color: white;\n  border-radius: 5px;\n}\n\nbutton.close {\n  background-color: var(--dmt-violet);\n}\n\n</style>\n",
    "{#if loaded}\n\n  {#if $connected}\n\n    <div id=\"analog_clock\" on:click=\"toggleClock()\" class:hidden=\"viewDef && (viewDef.show == 'none' || viewDef.show == 'blank')\">\n      <div id=\"clock_inner\">\n        <Clock />\n      </div>\n    </div>\n\n    <PlayInfo on:select=\"select(event.view)\" />\n\n  {/if}\n\n{/if}\n\n<script>\n\nimport Suntime from '../../widgets/src/Suntime.html';\nimport Clock from '../../widgets/src/AnalogClock.html';\nimport PlayInfo from '../../player/src/PlayInfo.html';\n\nimport { css, def } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n\n    this.listener = this.store.on('state', ({ current, changed, previous }) => {\n    });\n  },\n  ondestroy() {\n    this.listener.cancel();\n  },\n  methods: {\n    go(handle) {\n      window.location.href = `http://${window.location.hostname}:${window.location.port}/${handle}`;\n    },\n    select(view) {\n      this.fire('select', { view })\n    },\n    toggleClock() {\n      this.set({ clockHidden: !this.get().clockHidden })\n\n      const visibility = this.get().clockHidden ? 'hidden' : 'visible';\n\n      document.getElementById('clock_inner').style.visibility = visibility;\n    }\n  },\n  components: {\n    Suntime,\n    Clock,\n    PlayInfo\n  }\n};\n</script>\n\n<style>\n#analog_clock {\n  width: 600px;\n  height: 600px;\n\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  margin-top: -300px;\n  margin-left: -300px;\n  cursor: pointer;\n}\n\n#analog_clock.hidden {\n  display: none;\n}\n\n#time {\n  padding-bottom: 20px;\n  background-color: #222;\n  width: 500px;\n  border-radius: 15px;\n  opacity: 0.8;\n  margin: 0 auto;\n  margin-top: 70px;\n}\n\n</style>\n",
    "<!-- Notice we're not checking if we're connected here! Help should work in any case!!\ntodo: maybe explain what to do if we're not connected and why it might be happening -->\n\n<div id=\"help\">\n\n  <!-- <h1>Choose →</h1>\n\n  This works, just uncomment:\n\n  <button on:click=\"doc('a')\" class:selected=\"doc == 'a'\">Basic understanding of the system</button>\n  <button on:click=\"doc('b')\" class:selected=\"doc == 'b'\">Using the media player</button>\n  <button on:click=\"doc('c')\" class:selected=\"doc == 'c'\">IoT functionality</button> -->\n\n  {#if doc == 'a'}\n    <p>\n      Please visit <b>uniqpath.com</b> to learn more.\n    </p>\n\n    <!-- <p>\n\n    Decentralization means less top-down command and control.\n    </p>\n\n    <p>\n      In web3 future many new experiments will be made.\n    </p>\n\n    <p>\n      We have to do it right.\n    </p>\n\n    <p>\n      DMT is one of the approaches to information management.\n    </p>\n\n    <p>\n      Lack of https on this demo site is not a concern, there is additional second-level protection.\n    </p>\n\n    <p>\n      Start with setting up a 🐠 <a href=\"https://github.com/uniqpath/dmt\">Zeta Explorers (learning) Node</a>.\n    </p>\n\n    <p>\n      Minimal barrier to entry, it only takes ⏱️ 10 minutes.\n    </p> -->\n\n    <!-- <p>\n      We should look at small and reliable SBCs as devices we can put in many different appliances: from touch screen home devices to smart speakers and more. The real magic happens when these devices start to interact with each other — for example: one SBC is behind a touch screen that controls multiple speakers in our home.\n    </p> -->\n  {/if}\n\n  <!-- <p class=\"violet\">More information coming soon!</p> -->\n\n  <!-- {#if doc == 'b'}\n    <h1>B</h1>\n  {/if}\n\n  {#if doc == 'c'}\n    <h1>C</h1>\n  {/if} -->\n\n  <!-- {#if loaded && !atRPi}\n    <h1>More details →</h1>\n    <button class=\"docs\">Technical documentation</button>\n  {/if} -->\n\n  <!-- <div id=\"beatles\">\n    Help, I need somebody<br>\n    Help, not just anybody<br>\n    Help, you know I need someone, help<br>\n    When I was younger, so much younger than today<br>\n    I never needed anybody's help in any way<br>\n    But now these days are gone, I'm not so self assured<br>\n    Now I find I've changed my mind and opened up the doors<br>\n    </div>\n\n  <div id=\"help\">\n  Real manual is coming on <i>Fri Dec 13 2019</i><br>\n  Come back then and/or update your node with <span>dmt next</span>.\n  </div> -->\n\n</div>\n\n<script>\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n\n    this.set({ doc: 'a' });\n  },\n  methods: {\n    doc(doc) {\n      this.set({ doc });\n    }\n  }\n};\n</script>\n\n<style>\n.selected {\n  color: var(--dmt-bright-cyan);\n}\n\np {\n  width: 100%;\n}\n\np.violet {\n  color: var(--dmt-violet);\n}\n\n#help {\n  margin: 20px 0 0 40px;\n  font-size: 1.0em;\n  color: white;\n  width: 700px;\n  text-align: justify;\n}\n\n#beatles {\n  margin: 40px 0 0 40px;\n  font-size: 1.2em;\n}\n\n#help span {\n  color: #2E9D3D;\n  font-weight: bold;\n}\n\na {\n  color: white;\n}\n\nbutton {\n  display: block;\n  width: 500px;\n  padding: 20px;\n  margin-bottom: 5px;\n  background-color: var(--dmt-navy);\n  border: 0;\n  color: white;\n  font-size: 1.1em;\n  border-radius: 5px;\n}\n\nbutton.docs {\n  background-color: var(--dmt-cyan);\n}\n\nbutton:hover {\n  cursor: pointer;\n  opacity: 0.8;\n}\n\n</style>\n",
    "<svelte:window on:keydown=\"handleKeypress(event)\"/>\n\n{#if loaded && $connected && $device}\n\n  {#if !atRPi}\n    <div class=\"search\">\n      <input class=\"search_input\" bind:value=searchQuery on:keyup=\"searchInputChanged()\" on:paste=\"searchInputChanged()\" placeholder=\"Search media\">\n\n      <button on:click=\"chooseMediaType('music')\" class:selected=\"mediaType != 'video'\" class=\"media_type\">Music</button>\n      <button on:click=\"chooseMediaType('video')\" class:selected=\"mediaType == 'video'\" class=\"media_type\">Video</button>\n\n      <button on:click=\"playResults()\" class:hidden=\"!hasSearchResults($searchResults)\" class=\"action\">▶ Play</button>\n      <button on:click=\"addResults()\" class:hidden=\"!hasSearchResults($searchResults)\" class=\"action\">Add</button>\n      <button on:click=\"insertResults()\" class:hidden=\"!hasSearchResults($searchResults)\" class=\"action\">Insert</button>\n\n      {#if searchQuery && searchQuery.trim()}\n        <button on:click=\"clearResults()\" class=\"clear\">Clear</button>\n      {/if}\n\n      {#if $searchResults && searchQuery && searchQuery.trim()}\n        <div class=\"search_results\">\n          {#each $searchResults as providerResponse}\n            <div class=\"provider_title\">\n              {@html formatProviderMeta(providerResponse)}\n            </div>\n\n            {#if providerResponse.error}\n              <div class=\"provider_error\">\n                ⚠️  Error: {providerResponse.error}\n              </div>\n            {:else}\n              {#each providerResponse.results as { filePathANSI }}\n                 <!-- TODO: use dmt colors inside ANSI !! -->\n                <div class=\"result\">{#each parseAnsi(filePathANSI).spans as span}<span style=\"{span.css}\">{span.text}</span>{/each}</div>\n              {/each}\n\n              <div class=\"results_info_bottom\">\n                {@html formatProviderMetaBottom(providerResponse)}\n              </div>\n            {/if}\n          {/each}\n        </div>\n      {/if}\n    </div>\n  {/if}\n\n  {#if $device.serverMode}\n    <div class=\"player\">\n      <h1>There is no player available in serverMode</h1>\n    </div>\n  {:elseif $player}\n\n    {#if !$player.error}\n\n      <div class=\"player\" class:nonRPi=\"!atRPi\">\n        <div class=\"control\">\n\n          {#if $player.isStream || ($playlist && $playlist.length > 0)}\n            {#if $player.paused}\n              {#if homebase}\n                <button on:click=\"play()\" class=\"play\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'play'\">▶ Play </button>\n              {:else}\n                <!-- todo: refactor and determine classes dynamically -->\n                <button on:click=\"play()\" class=\"play foreign\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'play'\">▶ Play </button>\n              {/if}\n            {:else}\n              <button on:click=\"pause()\" class=\"pause\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'pause'\">● Pause</button>\n            {/if}\n          {/if}\n\n          {#if !$player.isStream && $playlist && $playlist.length > 0}\n            <button on:click=\"limitIncrease()\" class:limit_active=\"$player.limit > 0\" class:time_limit_active=\"$player.timeLimit > 0\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'limit' || touchAction == 'time_limit'\">Limit {$player.limit || ''}</button>\n            <button on:click=\"next()\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'next'\">➬ Next</button>\n            <button on:click=\"shuffle()\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'shuffle'\">Shuffle</button>\n\n            <button on:click=\"repeatIncrease()\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'repeat'\" class:repeat_active1=\"$player.repeatCount == 1\" class:repeat_active2=\"$player.repeatCount == 2\" class:repeat_active3=\"$player.repeatCount == 3\">Repeat\n            {#if $player.repeatCount}\n              {$player.repeatCount}\n            {/if}\n            </button>\n          {/if}\n\n          {#if $player.isStream}\n            <button on:click=\"limitIncrease()\" class:time_limit_active=\"$player.timeLimit > 0\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'limit' || touchAction == 'time_limit'\">Limit</button>\n            <button on:click=\"stop()\" disabled=\"{!$connected}\" class:touch_pressed=\"touchAction == 'stop'\">Quit</button>\n          {/if}\n\n          <button class=\"volume\" on:click=\"volumeDown()\" disabled=\"{!$connected || $player.volume == 0}\" class:touch_pressed=\"touchAction == 'volume_down'\">Vol ⬇</button>\n          <button class=\"volume\" on:click=\"volumeUp()\" disabled=\"{!$connected || $player.volume == 100}\" class:touch_pressed=\"touchAction == 'volume_up'\">Vol ⬆</button>\n          <!-- {#if thisDeviceName == selectedDeviceName} -->\n          {#if homebase}\n            <span class=\"volume\">{$player.volume}</span>\n          {:else}\n            <!-- todo: refactor and determine classes dynamically -->\n            <span class=\"volume foreign\">{$player.volume}</span>\n          {/if}\n        </div>\n\n        <!-- {#if $player.limit && $playlist && $playlist.length > 0} -->\n          {#if !$player.isStream && $player.limit}\n            <div class=\"limit_info\">\n              <span class=\"track_limit\">Stop after <span class=\"limit_num\">{$player.limit == 1 ? 'current' : $player.limit}</span> {$player.limit == 1 ? 'track' : 'tracks'} ■ <a href=\"#\" on:click|stopPropagation|preventDefault=\"limitReset()\" class:touch_pressed=\"touchAction == 'remove_limit'\">REMOVE LIMIT</a> ■ <a href=\"#\" class=\"set_time_limit\" on:click|stopPropagation|preventDefault=\"timeLimitIncrease()\" class:touch_pressed=\"touchAction == 'time_limit'\">SET TIME LIMIT</a></span>\n            </div>\n          {:elseif $player.timeLimit}\n            <div class=\"limit_info\">\n              <span class=\"time_limit\" class:grayed_out=\"$player.paused\">Stopping in <span class=\"limit_num\">{timeLimit}</span>\n              ■ <a href=\"#\" on:click|stopPropagation|preventDefault=\"timeLimitReset()\" class:touch_pressed=\"touchAction == 'remove_time_limit'\">REMOVE LIMIT</a>\n              ■ <a href=\"#\" class=\"set_time_limit\" on:click|stopPropagation|preventDefault=\"timeLimitIncrease()\" class:touch_pressed=\"touchAction == 'time_limit'\">ADD MORE TIME</a>\n            </div>\n          {/if}\n\n          {#if $player.limitReached}\n            <div class=\"limit_reached\">\n              Paused because limit was reached.\n            </div>\n          {/if}\n\n          {#if $player.timeLimitReached}\n            <div class=\"time_limit_reached\">\n              Paused because time limit was reached.\n            </div>\n          {/if}\n\n        <!-- <div class=\"time_position\">\n          <MediaTimePosition on:seek=\"seek(event.percentPos)\"/>\n        </div> -->\n\n        {#if !$player.isStream}\n\n          {#if !$playlist || $playlist.length == 0}\n            <div class=\"player_notice\">\n              <h1>Playlist is empty</h1>\n            </div>\n          {/if}\n\n        {/if}\n\n        <!-- CURRENT MEDIA -->\n\n        {#if $player.currentMedia && $player.currentMedia.song}\n          <div class=\"streaming_media_info\" class:faded=\"$player.paused\">\n\n            <!-- <div class=\"notice\">— PLAYING —</div> -->\n\n            <div class=\"song\" class:bigger=\"$player.currentMedia.song.length < 35\">\n\n              {#if !$player.paused}\n                <span>♪♫♬</span>\n              {/if}\n\n            {#if $player.currentMedia.artist}\n              {$player.currentMedia.artist} -\n            {/if}\n\n            {$player.currentMedia.song}\n\n            </div>\n          </div>\n\n          <div class=\"time_position\">\n            <MediaTimePosition on:seek=\"seek(event.percentPos)\"/>\n          </div>\n        {/if}\n\n        <!-- {#if showDetails} -->\n        <div id=\"player_ribbon_top\">\n          {#if ($player.hasMissingMedia && !$player.isStream) || $playlistMetadata.playlistHasSelectedEntries || $playlistMetadata.playlistClipboard}\n            <RibbonCurrentSelectionAndMissing on:mediaSourceOption=\"selectMediaSource(event.mediaSourceOption)\"/>\n          {:else}\n            <RibbonTop />\n          {/if}\n        </div>\n\n        <!-- PLAYLIST -->\n\n        {#if !$player.isStream && $playlist}\n          <div id=\"playlist\" class:nonRPi=\"!atRPi\">\n            <ul>\n              {#each $playlist as song}\n\n                {#if song.albumTitle}\n                  <li class=\"album_title\">{song.albumTitle}</li>\n                {/if}\n\n                <span class=\"marker\" class:limit_marker=\"$player.limit > 0\">{song.current ? ($player.paused ? '●' : (!$player.currentMedia || !$player.currentMedia.mediaType || $player.currentMedia.mediaType == 'music' ? '♫' : '▶')) : ''}</span>\n\n                <div class=\"li_wrapper\" class:darker=\"song.directoryTogetherness\">\n                  <li on:click=\"selectMedia(song.id)\" class:playing=\"song.current && !$player.paused && !$player.isStream\" class:past=\"song.past\" class:within_limit=\"song.withinLimit\" class:about_to_be_cut=\"song.aboutToBeCut\" class:selected=\"song.selected\" class:just_pasted=\"song.justPasted\" class:just_bumped=\"song.justBumped\" class:error=\"song.error\" class:metadata_read=\"song.metadata\">\n                    <span class=\"id\">{util.pad(song.id)}</span>\n\n                    <!-- show duration for videos before media title -->\n                    {#if song.metadata && song.metadata.duration && song.mediaType == 'video'}\n                      <span class=\"duration\" class:non_past=\"!song.past\">[{song.metadata.duration}]</span>\n                    {/if}\n\n                    <span class=\"song\">{song.title}\n\n                      {#if song.current && $player.repeatCount}\n                        <span class=\"repeat_song_mark\">(+{$player.repeatCount}x)</span>\n                      {/if}\n\n                    </span>\n\n                    <!-- show duration for music after media title -->\n                    {#if song.metadata && song.metadata.duration && song.mediaType == 'music'}\n                      <span class=\"duration\" class:non_past=\"!song.past\">[{song.metadata.duration}]</span>\n                    {/if}\n                  </li>\n                </div>\n              {/each}\n            </ul>\n          </div>\n        {/if}\n\n      </div>\n    {:else}\n      <div class=\"player\">\n        <h1 class=\"error\">⚠️ {$player.error.type}</h1>\n\n        <h2 class=\"error\">{@html $player.error.msg.replace('\\n', '<br>')}</h2>\n\n        {#if $player.error.type == 'mpv_binary_missing'}\n          {#if atRPi}\n            Please use the DMT RaspberryPi guide to compile the mpv project.\n          {:else}\n            🆘 <a href=\"${$player.error.helpUrl}\">Click here for install instructions ...</a>\n          {/if}\n        {/if}\n      </div>\n    {/if}\n  {/if}\n\n{/if}\n\n<script>\n\nimport executeSearch from '../../+legacyLib/executeSearchDuplicate';\n\nimport Time from '../../widgets/src/Time.html';\nimport MediaTimePosition from './MediaTimePosition.html';\n\nimport RibbonTop from './RibbonTop.html';\nimport RibbonCurrentSelectionAndMissing from './RibbonCurrentSelectionAndMissing.html';\n\nimport ansicolor from 'ansicolor';\nimport { util, colorsDmt } from '../../+legacyLib';\n\nconst colors = colorsDmt;\n\nexport default {\n  //store() { return new ConnectedStore({}, { ip: \"192.168.0.70\" }) },\n\n  oncreate() {\n    this.scope = 'player'; // scope for sending actions from frontend GUI to backend\n    // adds thisDeviceName and selectedDeviceName to the component store\n    this.store.entangle(this);\n\n    this.set({ queries: {}, searchQuery: '' })\n\n    this.listener = this.store.on('state', ({ current, changed, previous }) => {\n      const { prevDeviceName, selectedDeviceName } = this.get();\n      if(prevDeviceName != selectedDeviceName) {\n        this.selectedDeviceChanged(selectedDeviceName);\n      }\n      this.set({ prevDeviceName: selectedDeviceName })\n\n      if(current.thisDeviceState) { // todo: think if we really need to observe all state changes... AND if we get all differences inside thisDeviceState when we observe multiconnected store \"state\" event\n        const { player } = current;\n\n        if(player)  {\n          if(player.timeLimit) {\n            this.set({ timeLimit: this.calculateTimeLimit(player) });\n          } else {\n            this.set({ timeLimit: undefined });\n          }\n\n          this.set({ isStream: player.isStream })\n        }\n      }\n    })\n  },\n\n  ondestroy() {\n    this.listener.cancel();\n  },\n\n  helpers: {\n    util,\n    hasSearchResults(searchResults) {\n      if(searchResults) {\n        for(const providerResults of searchResults) {\n          if(providerResults.results && providerResults.results.length > 0) {\n            return true\n          }\n        }\n      }\n      return false;\n    },\n    parseAnsi(text) {\n      return ansicolor.parse(text);\n    },\n    // these two methods are also more or less duplicated in aggregateSearchResultsFormatter to provide cli search results formatting\n    formatProviderMeta(providerResponse) {\n      const { meta } = providerResponse;\n      const cnt = meta.contentId ? `${colors.gray('/')}${colors.cyan(meta.contentId)}` : '';\n      const provider = `${colors.green('Content')} → ${colors.magenta(`@${meta.providerHost}`)}${cnt} ${\n        providerResponse.providerAddress ? colors.gray(`(${meta.providerAddress})`) : ''\n      }`\n      return provider;\n    },\n    formatProviderMetaBottom(providerResponse) {\n      const { meta } = providerResponse;\n      const { page, noMorePages, resultCount, resultsFrom, resultsTo, searchTimePretty, networkTimePretty } = meta;\n\n      let time = '';\n\n      if (searchTimePretty) {\n        time += colors.gray(` · ${colors.gray('fs')} ${colors.green(searchTimePretty)}`);\n      }\n\n      if (networkTimePretty) {\n        time += colors.gray(` · ${colors.gray('network')} ${colors.cyan(networkTimePretty)}`);\n      }\n\n      if (resultCount > 0) {\n        if (page == 1 && noMorePages) {\n          return colors.yellow(`${resultCount} ${resultCount == 1 ? 'result' : 'results'}${time}`);\n        }\n\n        const isLastPage = noMorePages ? colors.gray(' (last page)') : '';\n        const resultsDescription = `${colors.cyan(`Results ${resultsFrom} to ${resultsTo}`)}`;\n        return colors.gray(`${colors.magenta(`Page ${page}`)}${isLastPage} → ${resultsDescription}${time}`);\n      }\n\n      return colors.gray(`No ${page > 1 ? 'more ' : ''}results${time}`);\n    }\n  },\n\n  methods: {\n    selectedDeviceChanged(deviceName) {\n      const { queries } = this.get();\n      if(queries[deviceName]) {\n        const { searchQuery, mediaType } = queries[deviceName];\n        this.set({ searchQuery, mediaType });\n      } else {\n        this.set({ searchQuery: '', mediaType: null });\n      }\n    },\n    searchInputChanged() {\n      const { searchQuery, selectedDeviceName, queries, mediaType } = this.get();\n\n      if(searchQuery == '') {\n        this.clearResults(); // check!! do we have to do the rest??\n      }\n\n      queries[selectedDeviceName] = queries[selectedDeviceName] || {};\n\n      queries[selectedDeviceName].searchQuery = searchQuery;\n      queries[selectedDeviceName].mediaType = mediaType;\n      this.set({ queries });\n\n      //this.executeQueryTimeout = setTimeout(() => {\n      //const { selectedDeviceName } = this.get();\n      const { prevQuery, prevMediaType } = queries[selectedDeviceName];\n\n      if(searchQuery.trim()) {\n        // console.log(searchQuery);\n        // we do these comparisons here althout basic comparisons if search query is different enough are also done in\n        // executeSearch ... here we have a specific situation because we query multiple devices as we switch between them, we need separate context for each\n        if(this.queryDifferentEnough({ searchQuery, prevQuery, mediaType, prevMediaType })) {\n          // console.log(`Sent ${searchQuery} with mediaType=${mediaType} to rpc/player/search`);\n\n          // console.log(\"BBB\");\n          // console.log(this.getSearchQuery());\n\n          // warning: this is remote object attached in gui middleware, not player actor yet !\n          const remoteObject = this.store.remoteObject('player');\n          const remoteMethod = 'search';\n\n          const searchDelay = 120;\n\n          executeSearch({ searchQuery: this.getSearchQuery(), remoteObject, remoteMethod, searchDelay }).then(searchResults => {\n            console.log(\"GOT SEARCH RESULTS\");\n            this.store.currentStore().set({ searchResults });\n          }).catch(console.log);\n\n        }\n\n        queries[selectedDeviceName].prevQuery = searchQuery;\n        queries[selectedDeviceName].prevMediaType = mediaType;\n        this.set({ queries })\n      }\n      //}, 120); // 200 !!!\n    },\n    queryDifferentEnough({ searchQuery, prevQuery, mediaType, prevMediaType }) {\n      return this.normalizeQuery(searchQuery) != this.normalizeQuery(prevQuery) || mediaType != prevMediaType;\n    },\n    normalizeQuery(query) {\n      return query ? query.trim().replace(/\\s+/g, ' ') : query;\n    },\n    addResults() {\n      const query = this.getSearchQuery();\n      if(query) {\n        // warning: this is remote object attached in gui middleware, not player actor yet !\n        this.store.remoteObject('player').call('add', { query }).then(searchResults => {\n          this.store.currentStore().set({ searchResults });\n        }).catch(console.log);\n      }\n      this.clearResults();\n    },\n    insertResults() {\n      const query = this.getSearchQuery();\n      // warning: this is remote object attached in gui middleware, not player actor yet !\n      this.store.remoteObject('player').call('insert', { query }).then(searchResults => {\n        this.store.currentStore().set({ searchResults });\n      }).catch(console.log);\n      this.clearResults();\n    },\n    playResults() {\n      const query = this.getSearchQuery();\n      if(query) {\n        // warning: this is remote object attached in gui middleware, not player actor yet !\n        this.store.remoteObject('player').call('play', { query }).catch(console.log);\n      }\n      this.clearResults();\n    },\n    clearResults() {\n      //console.log(\"CLEARING RESULTS\");\n      const { queries, selectedDeviceName } = this.get();\n      queries[selectedDeviceName] = { searchQuery: '', prevQuery: '' };\n      this.set({ queries, searchQuery: '' });\n      this.store.currentStore().set({ searchResults: null });\n    },\n    getSearchQuery() {\n      let { searchQuery, mediaType } = this.get();\n      searchQuery = searchQuery.trim();\n      if(mediaType == 'video') {\n        searchQuery = `${searchQuery} @media=video`;\n      }\n      return searchQuery;\n    },\n    chooseMediaType(mediaType) {\n      this.set({ mediaType });\n      const { queries, selectedDeviceName } = this.get();\n      queries[selectedDeviceName] = { mediaType };\n      this.set({ queries });\n      this.searchInputChanged();\n    },\n    handleKeypress(event) {\n      if(util.isInputElementActive()) {\n        return\n      }\n\n      // DUPLICATE!! --> some events from here are also handled in PlayInfo (which is not included in Player though, only in home and Clock for now )...\n      if(event.key && !event.altKey && !event.metaKey && !event.shiftKey) {\n        const $player = this.store.get().player\n\n        // GUI BUG!! todo.. happened only once , rare occurence :) on eclipse when pressing space.. no idea why $player does not exist... there is some good reason probably\n        // Uncaught TypeError: Cannot read property 'paused' of null\n        // at No.handleKeypress (Player.html:470)\n        //\n        // maybe in the start when player is not yet in the store (!?)\n        // doesn't matter .. will get fixed in Svelte3\n        if(!$player) {\n          return;\n        }\n\n        if(event.key == ' ') {\n          event.preventDefault();\n          if($player.paused) {\n            this.play();\n          } else {\n            this.pause();\n          }\n        }\n\n        if(event.key == 'n') {\n          this.next();\n        }\n\n        if(event.key == 's') {\n          this.shuffle();\n        }\n\n        if(event.key == 'l') {\n          this.limitIncrease();\n        }\n\n        if(event.key == 'm') {\n          this.timeLimitIncrease();\n        }\n\n        if(event.key == 'r') {\n          this.limitReset();\n        }\n\n        const step = 10;\n\n        if(event.code == 'ArrowRight') {\n          this.forward(step);\n        }\n\n        if(event.code == 'ArrowLeft') {\n          this.forward(-step);\n        }\n\n        if(event.keyCode == 38 || event.key == '+' || event.key == '=') {\n          this.volumeUp();\n        }\n\n        if(event.keyCode == 40 || event.key == '-') {\n          this.volumeDown();\n        }\n      }\n    },\n    action(action, payload) {\n      this.set({ touchAction: action })\n      setTimeout(() => this.set({ touchAction: undefined }), 50); // give it some (exact) time to be visible! it's too short otherwise (even if we put it after the action trigger (because this is very fast))\n\n      this.store.signal('action', { action, scope: this.scope, payload });\n    },\n    selectMediaSource(mediaSourceOption) {\n      // todo: handle \"browser\" and \"search\"\n      // delegate to proper subcomponent!\n      console.log(`Selecting media via: ${mediaSourceOption}. todo: browse and search`);\n\n      alert('Interface for this is coming by v1.0.1 ... use \"dmt next\" to update the system then or use commandline for now - command \"m\"')\n      //this.set({ selectMedia: media })\n      //this.fire('selectMedia', { media })\n    },\n    play() {\n      this.action('play');\n    },\n    pause() {\n      this.action('pause');\n    },\n    next() {\n      this.action('next');\n    },\n    shuffle() {\n      this.action('shuffle');\n    },\n    repeatIncrease() {\n      this.action('repeat');\n    },\n    forward(seconds) {\n      this.action('forward', { seconds });\n    },\n    volumeUp() {\n      this.action('volume_up');\n    },\n    volumeDown() {\n      this.action('volume_down');\n    },\n    stop() {\n      this.action('stop');\n    },\n    limitIncrease() { // used shen LIMIT button is clicked or \"l\" key pressed\n      if(this.get().isStream || this.get().timeLimit) {\n        this.action('time_limit');\n      } else {\n        this.action('limit');\n      }\n    },\n    timeLimitIncrease() { // used with \"ADD MORE TIME\" or \"SET TIME LIMIT\"\n      this.action('time_limit');\n    },\n    limitReset() {\n      this.action('remove_limit');\n    },\n    timeLimitReset() {\n      this.action('remove_time_limit');\n    },\n    selectMedia(songId) {\n      this.action('select', { songId });\n    },\n    seek(percentPos) {\n      this.action('goto', { percentPos });\n    },\n    calculateTimeLimit(player) {\n      return player.timeLimit > 2 ? `${Math.round(player.timeLimit)} min` : `${Math.round(player.timeLimit*60)} s`;\n    }\n  },\n\n  components: {\n    Time,\n    MediaTimePosition,\n    RibbonTop,\n    RibbonCurrentSelectionAndMissing\n  }\n};\n</script>\n\n<style>\n\n  :root {\n    --player-ribbon-height: 100px;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n\n  a:hover {\n    opacity: 0.8;\n  }\n\n  .error {\n    color: var(--dmt-red);\n  }\n\n  .player_notice {\n    float: left;\n    clear: both;\n  }\n\n  .player_notice h2 {\n    color: gray;\n  }\n\n  .player_notice a {\n    color: var(--dmt-navy);\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  .player .touch_pressed {\n    text-decoration: underline;\n  }\n\n  .player .control {\n    display: flex;\n    align-items: center;\n    margin-bottom: 30px;\n  }\n\n  .player .limit_info {\n    display: flex;\n    align-items: center;\n    margin: 30px 0;\n  }\n\n  /*.player .time_position {\n    float: left;\n  }\n\n  .player .extra_option {\n    float: left;\n  }\n\n  .player .extra_option button {\n    float: left;\n  }*/\n\n  .search {\n    padding: 15px 20px;\n    padding-left: 10px;\n    margin-left: 10px;\n  }\n\n  .search button {\n    height: 30px;\n    width: 60px;\n    font-size: 1.0em;\n    /*background: none;*/\n    margin: 0;\n    padding: 0;\n  }\n\n  .search button.hidden {\n    display: none;\n  }\n\n  .search button.action {\n    background-color: #263B28;\n    background-color: #5F7388;\n    background-color: #37BB9B;\n    /*background-color: var(--dmt-violet);*/\n    color: white;\n    color: #111;\n  }\n\n  .search button.media_type {\n    /*background-color: #333;*/\n  }\n\n  .search button.selected {\n    background-color: var(--dmt-navy);\n  }\n\n  .search button.clear {\n    /*background-color: #999;\n    color: #333;*/\n  }\n\n  .search button:hover {\n    opacity: 0.9;\n    cursor: pointer;\n  }\n\n  .search_input {\n    width: 421px;\n    height: 20px;\n    font-size: 1.1em;\n    padding: 4px 4px;\n    border: 0;\n    background-color: #ddd;\n    color: #333;\n    border-radius: 5px;\n  }\n\n  .search_results {\n    margin-top: 10px;\n    font-size: 0.8em;\n    /*margin-left: 10px;*/\n  }\n\n  .provider_title {\n    margin-bottom: 5px;\n  }\n\n  .provider_error {\n    clear: both;\n    color: var(--dmt-red);\n  }\n\n  .results_info_bottom {\n    clear: both;\n    margin-top: 5px;\n    margin-bottom: 10px;\n  }\n\n  button {\n    width: 100px;\n    height: 60px;\n    color: white;\n    margin-right: 10px;\n    border: 0;\n    font-size: 20px;\n    border-radius: 5px;\n    background-color: #444;\n  }\n\n  .player.nonRPi button {\n    height: 40px;\n  }\n\n  button:active {\n    opacity: 0.9;\n  }\n\n  .player.nonRPi button:hover {\n    cursor: pointer;\n    opacity: 0.9;\n  }\n\n  .player .extra_option button {\n    height: 30px;\n    margin-left: 10px;\n    margin-right: 0px;\n    color: #929EDB;\n  }\n\n  /*.player .extra_option button.set_next_button {\n    color: #D1AFFF;\n  }*/\n\n  .player .extra_option .limit_playtime {\n    margin-left: 10px;\n    padding-top: 5px;\n    color: #B6E29E;\n  }\n\n  button.volume {\n    color: #222;\n    background-color: #66AEB7;\n  }\n\n  button.play {\n    background-color: #26A9B7;\n  }\n\n  button.pause {\n    background-color: #aaa;\n    color: #222;\n  }\n\n  .play.foreign {\n    /*background-color: #E35D52; --- RED -- former color -- #  --- or this #FD685B */\n    /*background-color: var(--dmt-green);*/\n  }\n\n  .player {\n    margin-top: 14px;\n    padding: 0px 10px 0 20px;\n    color: white;\n  }\n\n  span.volume {\n    font-weight: bold;\n    color: #26A9B7;\n    font-size: 20px;\n  }\n\n  #playlist {\n    font-size: 19px;\n    margin-top: 5px;\n    /*line-height: 1.3em;*/\n    padding: 1px 15px;\n    border-radius: 20px;\n    font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 100%;\n\n    /*padding-bottom: var(--ribbon-height);*/\n    /*padding-bottom: 100px;\n    height: 100vh;*/\n  }\n\n  #playlist.nonRPi {\n    font-size: 18px;\n    line-height: 1em;\n  }\n\n  #playlist .marker {\n    width: 10px;\n    float: left;\n    color: var(--dmt-violet);\n    color: var(--dmt-bright-cyan);\n    /*color: #45FFB9;*/\n    font-size: 1.3em;\n    /*display: inline-block;*/\n  }\n\n  #playlist .marker.limit_marker {\n    color: #B6E29E;\n  }\n\n  #playlist ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  #playlist ul {\n    display: inline-block;\n  }\n\n  #playlist li {\n    color: #ccc;\n  }\n\n  #playlist .li_wrapper {\n    padding: 1px 0;\n  }\n\n  #playlist.nonRPi .li_wrapper {\n    padding: 1px 0;\n  }\n\n  #playlist li.album_title {\n    color: var(--dmt-lighter-magenta);\n  }\n\n  #playlist li.album_title {\n    padding: 4px 0;\n  }\n\n  #playlist li:hover {\n    cursor: pointer;\n  }\n\n  #playlist li.metadata_read {\n    color: white;\n  }\n\n  #playlist li.playing {\n    font-weight: bold;\n    /*color: #26A9B7;*/\n    color: var(--dmt-bright-cyan);\n  }\n\n  #playlist li.within_limit  {\n    color: #B6E29E;\n  }\n\n  #playlist li.past {\n    color: #aaa;\n  }\n\n  /* keep this above PAST so that PAST has precende and we don't see past errors that are not that relevant anymore */\n  /* NO!! SEE ALL ERRORS (missing files)! */\n  #playlist li.error  {\n    color: var(--warning);\n  }\n\n  #playlist li.just_pasted, #playlist li.just_bumped {\n    color: #AD91CF;\n  }\n\n  #playlist li.just_pasted.within_limit, #playlist li.just_bumped.within_limit {\n    font-weight: bold;\n  }\n\n  #playlist li.selected {\n    /*color: #929EDB;*/\n    /*color: #D1AFFF;*/\n    color: var(--dmt-orange);\n  }\n\n  #playlist li.within_limit.selected  {\n    font-style: italic; /*at least some indicator that selected song is also within limit... since we can only have one color (that of \"selected\" -- priority) */\n  }\n\n  #playlist li.about_to_be_cut {\n    color: #555E78;\n  }\n\n  #playlist li:hover .tooltip {\n    display: block;\n  }\n\n  li .tooltip {\n    display: none;\n    color: white;\n    background-color: gray;\n    padding: 1px 3px;\n    border-radius: 2px;\n    font-size: 0.8em;\n    margin-left: 0px; /* moves the tooltip to the right */\n    margin-top: 0px; /* moves it down */\n    position: absolute;\n    z-index: 1000;\n  }\n\n  button.limit_active {\n    background-color: #B6E29E;\n    color: #222;\n  }\n\n  button.time_limit_active {\n    background-color: #66AEB7;\n    color: #222;\n  }\n\n  .track_limit {\n    color: #B6E29E;\n    margin-right: 10px;\n  }\n\n  .limit_reached {\n    color: #B6E29E;\n  }\n\n  .time_limit, .set_time_limit, .time_limit_reached {\n    color: #66AEB7;\n  }\n\n  .limit_reached, .time_limit_reached {\n    margin: 30px 0;\n  }\n\n  .time_limit {\n    margin-right: 10px;\n  }\n\n  .time_limit.grayed_out {\n    color: #585858;\n    color: #444;\n  }\n\n  .track_limit .limit_num {\n    font-weight: bold;\n  }\n\n  .repeat_song_mark {\n    background-color: #7287A3;\n    color: white;\n    border-radius: 5px;\n    padding: 1px 0 3px 0;\n  }\n\n  .repeat_active1 {\n    /*background-color: #A36A49;*/\n    background-color: #7287A3;\n  }\n\n  .repeat_active2 {\n    /*background-color: #BE7A52;*/\n    background-color: #89A0C2;\n  }\n\n  .repeat_active3 {\n    background-color: #90A9D1;\n    /*background-color: #D68859;*/\n\n  }\n\n  #playlist li .id {\n    font-weight: bold;\n    color: #26A9B7;\n    font-family: \"CutiveMono\", \"Courier New\", Courier, monospace;;\n\n    padding-left: 4px;\n  }\n\n  /*#playlist.nonRPi li .id {*/\n  #playlist .li_wrapper {\n    border-left: 2px solid #555;\n    margin-left: 20px;\n    /*box-sizing: content-box;*/\n    /*box-sizing: border-box;*/\n  }\n\n  #playlist .duration.non_past {\n    color: #777;\n  }\n\n  /*#playlist.nonRPi li .id.darker {*/\n  #playlist .li_wrapper.darker {\n    border-left: 2px solid #aaa;\n  }\n\n  .streaming_media_info {\n    /*width: 100%;*/\n/*    margin: 20px 0;*/\n    width: 540px;\n    /*font-size: 1.2em;*/\n    clear: both;\n  }\n\n  .streaming_media_info.faded {\n    opacity: 0.2;\n  }\n\n  .streaming_media_info .notice {\n    /*font-weight: bold;*/\n    color: #A393FF;\n    margin-bottom: 10px;\n    font-size: 1.2em;\n    text-align: center;\n  }\n\n  .streaming_media_info .song {\n    /*background-color: #80AFE5;*/\n    background: linear-gradient(180deg, rgba(65,70,143,1) 0%, rgba(65,70,143,0.8407738095238095) 100%);\n    /*background: linear-gradient(180deg, rgba(65,70,143,1) 0%, rgba(65,70,143,0.9556197478991597) 100%);\n    background: linear-gradient(180deg, rgba(65,70,143,1) 0%, rgba(65,70,143,1) 100%);*/\n    color: white;\n\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    padding: 20px;\n    width: 100%;\n    display: inline-block;\n    box-sizing: border-box;\n    text-align: center;\n  }\n\n  .streaming_media_info .song span {\n    color: #873BBF;\n    color: #26A9B7;\n    /*color: #66AEB7;*/\n  }\n\n  .streaming_media_info .song.bigger {\n    font-size: 1.5em;\n  }\n\n  #player_ribbon_bottom {\n    position: absolute;\n    background: rgb(36,36,36);\n    background: linear-gradient(180deg, rgba(36,36,36,1) 0%, rgba(23,24,40,1) 100%);\n    bottom: 0px;\n    width: 100%;\n    /*box-sizing: border-box;*/\n    /*padding: 0px;*/\n    height: var(--player-ribbon-height);\n  }\n\n  @media only screen and (max-width: 640px) {\n    button {\n      width: 47px;\n      font-size: 8px;\n      margin-right: 2px;\n    }\n\n    .volume {\n      font-size: 15px;\n    }\n\n    #playlist {\n      font-size: 10px;\n    }\n  }\n</style>\n",
    "{#if $connected == false}\n  <div id=\"device\">\n    <span class=\"error\">✖</span>\n    {#if $device}\n      <h3 id=\"title\">{($device.deviceName) || ''}</h3>\n    {/if}\n  </div>\n\n  <div id=\"top_icons\">\n    <div id=\"broken_connection\" >\n      ✖\n    </div>\n  </div>\n{/if}\n\n<script>\nexport default {\n  methods: {\n    escape() {\n      console.log(\"ESCAPE\")\n      if(this.get().atRPi) {\n        // visual notification (especially important on touch) that command was given\n        this.set({ touchPressed: 'escape' })\n        setTimeout(() => { this.fire('escape'); this.set({ touchPressed: undefined }) }, 0); // so that thread has actual time to show the effect\n      } else {\n        this.fire('escape');\n      }\n    }\n  }\n};\n</script>\n\n<style>\n  #device {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: flex;\n    align-items: center;\n    font-size: 30px;\n    padding-top: 15px;\n    padding-left: 15px;\n  }\n\n  #device .error {\n    color: #E03434;\n    margin-right: 10px;\n  }\n\n  #device h3#title {\n    color: #228D97;\n    padding: 0;\n    margin: 0;\n  }\n\n  #broken_connection {\n    position: absolute;\n    right: 20px;\n    top: 0;\n    color: #E03434;\n    text-align: center;\n    font-size: 120px;\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  #top_icons img, #menu img {\n    width: 120px;\n    padding: 20px;\n    cursor: pointer;\n  }\n</style>\n",
    "{#if loaded}\n\n  {#if $connected && $device}\n    <div class=\"selector\" class:nonRPi=\"!atRPi\">\n\n      <div class=\"options\">\n        <div class=\"player\" on:click=\"select('player')\" class:touch_pressed=\"touchPressed == 'player'\">Player</div>\n        <div class=\"clock\" on:click=\"select('clock')\" class:touch_pressed=\"touchPressed == 'clock'\">Clock</div>\n      </div>\n\n      {#if isDevUser}\n        <div class=\"options\">\n          <div class=\"ambience\" on:click=\"select('ambience')\" class:touch_pressed=\"touchPressed == 'ambience'\">Ambience</div>\n        </div>\n      {/if}\n\n      <div class=\"options\">\n        {#if !atRPi}\n          <div class=\"apps\" on:click=\"select('apps')\" class:touch_pressed=\"touchPressed == 'apps'\">Apps</div>\n        {:else}\n          <div class=\"help\" on:click=\"select('help')\" class:touch_pressed=\"touchPressed == 'help'\">Help</div>\n        {/if}\n        <div class=\"device\" on:click=\"select('device')\" class:touch_pressed=\"touchPressed == 'device'\">Device</div>\n      </div>\n\n      <div class=\"deviceInfo\">\n        {#if selectedDeviceName}\n          {#if $device.demoDevice}\n            <div class=\"deviceName\">{$device.demoDevice.deviceName}</div>\n            <div class=\"ip\">{$device.demoDevice.tagline}</div>\n          {:else}\n\n            <div class=\"deviceName\" class:connectivity_problem=\"$device.connectivityProblem\" class:local_connectivity_problem=\"$device.localConnectivityProblem\" class:connectivity_resumed=\"$device.connectivityResumed\">\n\n              {#if $device.connectivityProblem || $device.localConnectivityProblem}✖{/if}\n\n              {selectedDeviceName} <span class=\"dev\">{$device.devPanel ? '[DΞV]' : ''}</span>\n\n              <span class=\"ap_mode\">{$device.apMode ? '(AP)' : ''}</span>\n            </div>\n\n            {#if $device.localConnectivityProblem || $device.localConnectivityResumed}\n              <div class=\"deviceConnectivityStatus\" class:local_connectivity_problem=\"$device.localConnectivityProblem\" class:local_connectivity_resumed=\"$device.localConnectivityResumed\">\n                <!-- DUP -->\n                {#if $device.localConnectivityProblem}\n                  Router unreachable\n                {:elseif $device.localConnectivityResumed}\n                  Router connection resumed\n                {/if}\n              </div>\n            {/if}\n\n            {#if $device.connectivityProblem || $device.connectivityResumed}\n              <div class=\"deviceConnectivityStatus\" class:connectivity_problem=\"$device.connectivityProblem\" class:connectivity_resumed=\"$device.connectivityResumed\">\n                <!-- DUP -->\n                {#if $device.connectivityProblem}\n                  Internet unreachable\n                {:elseif $device.connectivityResumed}\n                  Internet connection resumed\n                {/if}\n              </div>\n            {/if}\n\n            {#if $device}\n              <div class=\"ip\">\n                {#if $device.ip}\n                  {$device.ip}\n                {/if}\n              </div>\n\n              {#if $device.wifiAP || $device.apssid}\n                <div class=\"wifi_ap\">{$device.wifiAP || $device.apssid}</div>\n              {/if}\n\n              <NearbyHandyLinks />\n\n              {#if $device.apMode && $device.apInfo}\n                <div class=\"ap_wifi_info\">\n                  <ApWifiCredentials />\n                </div>\n              {/if}\n\n            {/if}\n          {/if}\n        {/if}\n      </div>\n\n      <slot><!-- place for other controls that come vertically aligned after TileBar (example: VolumeWidget) --></slot>\n\n    </div>\n  {:else}\n    <div id=\"broken_connection\">\n      ✖\n    </div>\n  {/if}\n\n{/if}\n\n<script>\n\nimport ApWifiCredentials from '../../widgets/src/ApWifiCredentials.html';\nimport NearbyHandyLinks from './NearbyHandyLinks.html';\n\nexport default {\n  oncreate() {\n    // keep a few dmt-related variables (timeDate, environment, thisDeviceName, selectedDeviceName, homebase) synced with the backend of THIS device\n    // other more fluid variables will be available in global store! for example $player .... always connected to either local device player\n    // or remote device player backend\n    this.store.entangle(this);\n  },\n\n  methods: {\n    select(view) {\n      if(this.get().atRPi) {\n        // visual notification (especially important on touch) that command was given\n        this.set({ touchPressed: view })\n        setTimeout(() => this.fire('select', { view }), 0); // so that thread has actual time to show the effect\n      } else {\n        this.fire('select', { view })\n      }\n    }\n  },\n\n  components: {\n    ApWifiCredentials,\n    NearbyHandyLinks\n  }\n};\n</script>\n\n<style>\n\n  #broken_connection {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 20px;\n    color: #E03434;\n    text-align: center;\n    font-size: 120px;\n  }\n\n  .options {\n    display: flex;\n  }\n\n  .options div.touch_pressed {\n    text-decoration: underline;\n    /*color: #000000;*/\n  }\n\n  .options div {\n    flex: 1;\n    padding: 40px 30px;\n    font-size: 1.6em;\n    text-align: center;\n    color: white;\n    cursor: pointer;\n    opacity: 0.7;\n  }\n\n  span.dev {\n    color: #999;\n    font-size: 0.8em;\n  }\n\n  .selector.nonRPi .options div:hover {\n    opacity: 0.8;\n  }\n\n  .options div:active {\n    opacity: 0.8;\n  }\n\n  .options .player {\n    background-color: #484E9F;\n  }\n\n  .options .player svg {\n    display: none;\n  }\n\n  .options .device {\n    background-color: #4A7CA0;\n    padding: 20px 30px;\n  }\n\n  .options .help {\n    background-color: #56A367;\n    background-color: #777;\n    padding: 20px 30px;\n  }\n\n  .options .apps {\n    background-color: #9E3B84;\n    color: white;\n    padding: 20px 30px;\n  }\n\n  .options .motivation {\n    background-color: #D06942;\n    padding: 20px 30px;\n  }\n\n  .options .ambience {\n    background-color: #53A457;\n    background-color: #6D689F;\n    padding: 20px 10px;\n  }\n\n  .options .playground {\n    background-color: #66A356;\n  }\n\n  .options .source {\n    background-color: #40C9B3;\n  }\n\n  .options .clock {\n    background-color: #76196C;\n    background-color: #4A9AA1;\n  }\n\n  .options .show_url {\n    background-color: #12464D;\n  }\n\n  .options .messaging {\n    background-color: #35343C;\n  }\n\n  .options .news {\n    background-color: #1A6A72;\n  }\n\n  .options .browse {\n    background-color: #12464D;\n  }\n\n  .options .system {\n    background-color: #40C9B3;\n  }\n\n  .deviceInfo {\n    background-color: #070D0B;\n    opacity: 0.7;\n    border-bottom-left-radius: 20px;\n  }\n\n  .deviceInfo span.ap_mode {\n    color: #DB2643;\n    font-weight: bold;\n  }\n\n  .deviceInfo .deviceName {\n    padding: 20px 20px;\n    padding-bottom: 10px;\n    font-size: 2.0em;\n    text-align: center;\n    color: white;\n    cursor: default;\n  }\n\n  .deviceInfo .deviceConnectivityStatus {\n    padding: 5px 5px;\n    padding-bottom: 10px;\n    text-align: center;\n    cursor: default;\n  }\n\n  /* DUP  DeviceInfo */\n  .deviceInfo .deviceName.local_connectivity_problem,\n  .deviceInfo .deviceConnectivityStatus.local_connectivity_problem,\n  .deviceInfo .deviceName.local_connectivity_resumed,\n  .deviceInfo .deviceConnectivityStatus.local_connectivity_resumed {\n    color: #FF7A2C;\n  }\n\n  /* DUP  DeviceInfo */\n  .deviceInfo .deviceName.connectivity_problem,\n  .deviceInfo .deviceConnectivityStatus.connectivity_problem {\n    color: #e34042;\n  }\n\n  /* DUP  DeviceInfo */\n  .deviceInfo .deviceName.connectivity_resumed,\n  .deviceInfo .deviceConnectivityStatus.connectivity_resumed {\n    color: var(--dmt-cool-green);\n  }\n\n  .deviceInfo .ip {\n    padding-bottom: 10px;\n    text-align: center;\n    cursor: default;\n  }\n\n  .deviceInfo a {\n    color: white;\n  }\n\n  .deviceInfo .ap_wifi_info {\n    padding: 10px;\n  }\n\n  .deviceInfo .wifi_ap {\n    margin-bottom: 10px;\n    font-size: 0.7rem;\n    text-align: center;\n    /*color: var(--dmt-lighter-magenta);*/\n    /*color: white;*/\n  }\n\n  .options div.disabled {\n    opacity: 0.2;\n  }\n\n  .update_available {\n    margin-top: 10px;\n    text-align: center;\n    background-color: #070D0B;\n    opacity: 0.7;\n    border-radius: 15px;\n    padding: 10px;\n  }\n\n  .update_available a {\n    color: white;\n  }\n\n  .update_available a:hover {\n    color: #DDD;\n  }\n</style>\n",
    "{#if $player && $player.paused == false && $player.currentMedia && $player.currentMedia.song}\n  <div id=\"play_controls\">\n    <div class=\"pause\">\n      <a href=\"#\" on:click|stopPropagation|preventDefault=\"pause()\">✖</a>\n    </div>\n    <div class=\"volume\">\n      <a href=\"#\" class=\"volume_down\" on:click|stopPropagation|preventDefault=\"volumeDown()\">▼</a>\n      {$player.volume}\n      <a href=\"#\" class=\"volume_up\" on:click|stopPropagation|preventDefault=\"volumeUp()\">▲</a>\n    </div>\n  </div>\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {},\n  methods: {\n    action(action) {\n      this.store.signal('action', { action, scope: 'player' });\n    },\n    pause() {\n      this.action('pause');\n    },\n    volumeUp() {\n      this.action('volume_up');\n    },\n    volumeDown() {\n      this.action('volume_down');\n    }\n  }\n};\n</script>\n\n<style>\n#play_controls {\n  font-size: 50px;\n  margin-top: 25px;\n  color: #26A9B7;\n  padding-left: 0px;\n  color: white;\n  opacity: 0.7;\n  background-color: #070D0B;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  display: flex;\n  padding: 10px 0;\n}\n\n.volume {\n  color: #26A9B7;\n  width: 200px;\n  text-align: center;\n  margin: 0 auto;\n}\n\n.volume_down {\n  float: left;\n}\n\n.volume_up {\n  float: right;\n}\n\n.volume {\n  margin: 0 5px;\n}\n\n.pause {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n.volume a, .pause a {\n  text-decoration: none;\n  text-align: center;\n  color: white;\n  background-color: #070D0B;\n}\n\n.volume a:hover, .pause a:hover {\n  opacity: 0.7;\n}\n\n.pause a {\n  color: #555;\n}\n\n</style>\n",
    "<svelte:window on:keydown=\"handleKeypress(event)\"/>\n\n{#if loaded && $connected}\n\n  <div id=\"top_icons\" class:touch_pressed=\"touchPressed == 'escape'\">\n    {#if homeButtonImgInline}\n      <div class=\"escape\" class:touch_pressed=\"touchPressed == 'escape'\" class:nonRPi=\"!atRPi\">\n        <img src=\"{homeButtonImgInline}\" alt=\"home\" on:click=\"escape()\">\n      </div>\n\n      <PeerList showPeerOnlyIfDisconnected={true} />\n    {/if}\n  </div>\n\n{/if}\n\n<script>\n\nimport PeerList from '../../widgets/src/PeerList.html';\n\n// via rollup-plugin-image-base64\nimport homeButtonImgInline from '../../common_assets/img/icons/home.png';\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.set({ homeButtonImgInline });\n\n    // adds thisDeviceName, selectedDeviceKey and selectedDeviceName to the component store\n    this.store.entangle(this);\n  },\n  methods: {\n    handleKeypress(event) {\n      if(util.isInputElementActive()) {\n        return\n      }\n\n      if(event.key && !event.altKey && !event.metaKey && !event.shiftKey) {\n        if(event.key == 'Escape' || event.key == 'h') {\n          this.escape();\n        }\n      }\n    },\n    escape() {\n      if(this.get().atRPi) {\n        // visual notification (especially important on touch) that command was given\n        this.set({ touchPressed: 'escape' })\n        setTimeout(() => { this.fire('escape'); this.set({ touchPressed: undefined }) }, 0); // so that thread has actual time to show the effect\n      } else {\n        this.fire('escape');\n      }\n    }\n  },\n  components: {\n    PeerList\n  }\n};\n</script>\n\n<style>\n\n#top_icons {\n  z-index: 10000;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n#top_icons div {\n  padding-top: 15px;\n  cursor: pointer;\n}\n\n#top_icons div img {\n  width: 120px;\n  padding: 5px 20px;\n}\n\n.escape.nonRPi:hover {\n  opacity: 0.9;\n}\n\n.escape:active {\n  opacity: 0.6;\n}\n\n#top_icons.touch_pressed {\n  display: none;\n}\n\n.escape.touch_pressed {\n  display: none;\n}\n\n@media only screen and (max-width: 640px) {\n  #top_icons {\n    display: none;\n  }\n}\n\n</style>\n",
    "<svelte:window on:keydown=\"handleKeypress(event)\"/>\n\n{#if $player && !$player.error && !$player.paused && $device && !$device.serverMode}\n\n  <div id=\"playinfo\" class:protect_visibility=\"viewDef && viewDef.protectVisibility\" class:nonRPi=\"!atRPi\">\n\n    <div class=\"wrap\">\n      <div id=\"current_song\" on:click=\"select('player')\">\n        {#if $player && !$player.paused && $player.currentMedia && $player.currentMedia.song}\n          <span class=\"notes\">{$player.isStream ? 'STREAM' : '♪♫♬'}</span> {$player.currentMedia.artist ? `${$player.currentMedia.artist} - ${$player.currentMedia.song}`.substring(0,50) : $player.currentMedia.song.substring(0,50)}\n          <!-- todo: do this character limit in css ! -->\n        {:elseif $player && $player.spaced && $player.spacedTimeRemaining && !$player.timeposition }\n          <div class=\"spaced_time_remaining\">\n            Waiting <span>{$player.spacedTimeRemaining}s</span> before continuing ...\n          </div>\n        {/if}\n      </div>\n\n      {#if !$player.isStream}\n        <div class=\"time_position\">\n          <MediaTimePosition />\n        </div>\n      {/if}\n    </div>\n\n  </div>\n\n{/if}\n\n<script>\nimport MediaTimePosition from './MediaTimePosition.html';\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n  methods: {\n    select(view) {\n      this.fire('select', { view })\n    },\n    handleKeypress(event) {\n      if(util.isInputElementActive()) {\n        return\n      }\n\n      // SOME DUPLICATION!! in PLAYER\n      if(event.key && !event.altKey && !event.metaKey && !event.shiftKey) {\n        const $player = this.store.get().player // somehow $player not accessible from here, but in oncreate() it was...\n        if(event.key == ' ') {\n          event.preventDefault();\n          if($player.paused) {\n            this.play();\n          } else {\n            this.pause();\n          }\n        }\n\n        if(event.key == 'n') {\n          this.next();\n        }\n\n        const step = 10;\n\n        if(event.code == 'ArrowRight') {\n          this.forward(step);\n        }\n\n        if(event.code == 'ArrowLeft') {\n          this.forward(-step);\n        }\n\n        if(event.keyCode == 38 || event.key == '+' || event.key == '=') {\n          this.volumeUp();\n        }\n\n        if(event.keyCode == 40 || event.key == '-') {\n          this.volumeDown();\n        }\n      }\n    },\n    play() {\n      this.action('play');\n    },\n    next() {\n      this.action('next');\n    },\n    shuffle() {\n      this.action('shuffle');\n    },\n    pause() {\n      this.action('pause');\n    },\n    forward(seconds) {\n      this.action('forward', { seconds });\n    },\n    volumeUp() {\n      this.action('volume_up');\n    },\n    volumeDown() {\n      this.action('volume_down');\n    },\n    action(action, payload, scope = 'player') {\n      this.store.signal('action', { action, scope, payload });\n    }\n  },\n\n  components: {\n    MediaTimePosition\n  }\n};\n</script>\n\n<style>\n\n#playinfo {\n  position: absolute;\n  /*bottom: 10px;*/\n  bottom: 0px;\n  width: 100%;\n}\n\n#playinfo.protect_visibility {\n  background-color: #222;\n  opacity: 0.8;\n}\n\n.notes {\n  color: #26A9B7;\n}\n\n.wrap {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  height: 50px;\n  /* to match it with at_home entire ribbon... current song text will stay at the same vertical position! */\n}\n\n#current_song {\n  display: inline-block;\n  margin: 0 auto;\n\n  font-size: 30px;\n  color: white;\n  cursor: pointer;\n  font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n}\n\n#playinfo.nonRPi #current_song:hover {\n  color: #26A9B7;\n}\n\n.spaced_time_remaining {\n  color: #aaa;\n}\n\n.spaced_time_remaining span {\n  color: white;\n}\n\n</style>\n",
    "{#if false && ($view == 'player' && $player && $player.currentMedia)}\n\n  <!-- {#if showDetails} -->\n    {#if $player.isStream}\n      <div class=\"speech-bubble\">\n\n        <div class=\"media_info\">\n          {#if !$player.paused}\n            Playing\n          {/if}\n          <div class=\"property\">{$player.currentMedia.song}</div>\n\n          {#if $player.bitrate}\n            <br>\n            bitrate <div class=\"property\">{$player.bitrate}</div>\n          {/if}\n\n          {#if $playlist}\n            <br>\n            <!-- triplicate! -->\n              Non-streaming playlist length <div class=\"property\" class:warning=\"$playlistMetadata.playlistLength >= 5000\">({$playlistMetadata.playlistLength} items)</div>\n          {/if}\n\n        </div>\n      </div>\n\n    {:elseif $player.currentMedia.artist}\n      <div class=\"speech-bubble\">\n\n        <div class=\"media_info\">\n          <div class=\"property song\">{$player.currentMedia.song}</div> is a song by\n          <div class=\"property artist\">{$player.currentMedia.artist}</div>\n          from album <div class=\"property\">{$player.currentMedia.album}</div>\n          {#if $player.currentMedia.year}\n            released <div class=\"property\">{$player.currentMedia.year}</div>\n          {/if}\n          {#if $player.bitrate}\n            bitrate <div class=\"property\">{$player.bitrate}</div>\n          {/if}\n          {#if $playlist}\n            <br>\n            <!-- triplicate! -->\n            Playlist length <div class=\"property\" class:warning=\"$playlistMetadata.playlistLength >= 5000\">{$playlistMetadata.playlistLength} items\n            <!-- metadata reading -->\n            {#if $playlistMetadata.metadataReadCount && $playlistMetadata.playlistLength != $playlistMetadata.metadataReadCount}\n              / {$playlistMetadata.metadataReadCount}\n            {/if}\n            </div> <!-- we read from metadata because playlist might be trimmer for GUI (only relevant 50 entries for performance) -->\n          {/if}\n        </div>\n      </div>\n\n    {:elseif $playlist}\n      <div class=\"speech-bubble\">\n        <div class=\"media_info\">\n          <!-- triplicate! -->\n          Playlist length <div class=\"property\" class:warning=\"$playlistMetadata.playlistLength >= 5000\">{$playlistMetadata.playlistLength} items\n          <!-- metadata reading -->\n          {#if $playlistMetadata.metadataReadCount && $playlistMetadata.playlistLength != $playlistMetadata.metadataReadCount}\n            / {$playlistMetadata.metadataReadCount}\n          {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n  <!-- {/if} -->\n\n{/if}\n\n<!-- <img class=\"alien\" src=\"/img/alien.png\"> -->\n\n{#if alienImgInline && (!$guiNotifications || $guiNotifications.length <= 2)}\n  <img src=\"{alienImgInline}\" class=\"alien\" class:nonRPi=\"!atRPi\">\n{/if}\n\n<script>\n\n// via rollup-plugin-image-base64\nimport alienImgInline from '../../common_assets/img/icons/alien.png';\n\nexport default {\n  oncreate() {\n    this.set({ alienImgInline });\n\n    this.store.entangle(this);\n  }\n};\n</script>\n\n<style>\n\n.media_info {\n  color: #777;\n}\n\n.media_info .property {\n  color: black;\n}\n\n.media_info .property.artist {\n  color: var(--dmt-violet);\n  font-weight: bold;\n}\n\n.media_info .property.song {\n  color: var(--dmt-navy);\n  font-weight: bold;\n}\n\n.media_info .property.warning {\n  /**/\n}\n\n.media_info .property.warning::after {\n  color: var(--warning);\n  content: \" (can get slow > 5000)\";\n  font-size: 0.8em;\n}\n\nimg.alien {\n  width: 200px;\n  filter: invert(0.30);\n}\n\n/* SPEECH BUBBLE */\n\n.speech-bubble {\n  position: relative;\n  background: #ddd;\n  border-radius: .4em;\n\n  font-size: 0.9em;\n\n  color: black;\n  padding: 10px;\n  margin-bottom: 20px;\n}\n\n.speech-bubble:after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border: 24px solid transparent;\n  border-top-color: #ddd;\n  border-bottom: 0;\n\n  margin-left: -24px;\n  margin-bottom: -24px;\n}\n\n</style>\n",
    "<div id=\"menu\" class:nonRPi=\"!atRPi\">\n\n  <h3>Logs</h3>\n\n  <button class:active=\"deviceView == 'device_log'\" on:click=\"select('device_log')\" class:touch_pressed=\"touchInfo == 'device_log'\">dmt-proc</button>\n\n  <!-- <button class:active=\"deviceView == 'network_log'\" on:click=\"select('network_log')\" class:touch_pressed=\"touchInfo == 'network_log'\">Network log</button> -->\n\n  <button class:active=\"deviceView == 'frontend_log'\" on:click=\"select('frontend_log')\" class:touch_pressed=\"touchInfo == 'frontend_log'\">Frontend</button>\n\n  <h3>Process state</h3>\n\n  <button class:active=\"deviceView == 'device_state'\" on:click=\"select('device_state')\" class:touch_pressed=\"touchInfo == 'device_state'\">Device</button>\n\n  <button class:active=\"deviceView == 'time_state'\" on:click=\"select('time_state')\" class:touch_pressed=\"touchInfo == 'time_state'\">Time</button>\n\n  <button class:active=\"deviceView == 'player_state'\" on:click=\"select('player_state')\" class:touch_pressed=\"touchInfo == 'player_state'\">Player</button>\n\n  <h3>Nearby sensors</h3>\n\n  <button class:active=\"deviceView == 'nearby_sensors_state'\" on:click=\"select('nearby_sensors_state')\" class:touch_pressed=\"touchInfo == 'nearby_sensors_state'\">Sensor data</button>\n\n  {#if $connected && loaded && $device}\n\n    {#if $device.devMachine || isRPi}\n\n      <h3>Wifi setup</h3>\n\n      <button class:active=\"deviceView == 'wifi_setup'\" on:click=\"select('wifi_setup')\" class:touch_pressed=\"touchInfo == 'wifi_setup'\">Wifi setup or reboot</button>\n\n    {/if}\n\n  {/if}\n\n</div>\n\n<script>\n\nexport default {\n  oncreate() {\n    this.set({ deviceView: 'device' }); // default, duplicate in Debug.html\n\n    this.store.entangle(this);\n  },\n  helpers: {\n  },\n  methods: {\n    select(view) {\n      this.set({ deviceView: view, touchInfo: view });\n      setTimeout(() => this.set({ touchInfo: undefined }), 50);\n\n      setTimeout(() => this.store.fire('select_device_view', { view }), 0)\n      //this.store.fire('select_device_view', { view });\n    }\n  }\n};\n\n</script>\n\n<style>\n\n#menu {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.touch_pressed {\n  text-decoration: underline;\n}\n\nbutton {\n  display: inline-block;\n  margin: 0 auto;\n  background-color: #484E9F;\n  border: 0;\n  color: black;\n  font-size: 1.0em;\n  cursor: pointer;\n  height: 2em;\n  color: white;\n  border-radius: 5px;\n}\n\n#menu.nonRPi button:hover {\n  opacity: 0.8;\n}\n\nbutton.active {\n  color: black;\n  background-color: #40C9B3;\n}\n\n</style>\n",
    "{#if $guiNotifications}\n\n    <!-- GUI NOTIFICATIONS HOME SCREEN -->\n\n    <div id=\"notifications\" class:move_down=\"$view == 'home' && !$connected\">\n      {#if $device}\n\n          {#each $guiNotifications.slice().reverse() as notification}\n            <div class=\"notification\" style={styles(notification)}>\n              {#if notification.title}\n                <div class=\"title\">{notification.title}</div>\n              {/if}\n\n              {notification.msg || ''}\n\n              {#if notification.tagline}\n                <div class=\"time\">\n                  {notification.tagline}\n                </div>\n              {:elseif !notification.omitTtl}\n                <div class=\"time\">\n                  {#if notification.relativeTimeAdded}\n                    {notification.relativeTimeAdded} ago\n                  {:else}\n                    now\n                  {/if}\n                </div>\n              {/if}\n\n            </div>\n          {/each}\n\n      {/if}\n    </div>\n\n{/if}\n\n<script>\n\n  import { def } from '../../+legacyLib';\n\n// disabled transitions for now because they were causing a big issue for some reason (mixup of 'views' -- home component rendered on top of player and others... ')\n// import { fade, fly } from 'svelte-transitions';\n\nexport default {\n  helpers: {\n    styles: (el) => getStyles(el),\n    listify: (el) => def.listify(el)\n  }\n};\n\nconst getStyles = ({ color = 'black', bgColor = 'white' }) => (\n  `\n    color: ${color};\n    background-color: ${bgColor};\n  `\n);\n\n</script>\n\n<style>\n\n/* NOTIFICATIONS */\n\n#notifications {\n  margin-top: 15px;\n  /* BUG :: this doens't work... if there is a notification and X lab (disconnected info) at the same time, notification should appear lower than usual!! */\n}\n\n#notifications.move_down {\n  margin-top: 75px;\n}\n\n.notification {\n  /*position: relative;*/\n  margin-top: 10px;\n  padding: 20px 25px;\n  color: black;\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n  border-radius: 10px;\n  width: 220px;\n}\n\n.notification .title {\n  font-size: 0.8em;\n  /*text-decoration: underline;*/\n  opacity: 0.8;\n  margin-bottom: 3px;\n}\n\n/* todo: style this text also somehow... or make it related to specified color of .notification  */\n.notification .time {\n  /*color: #898989;*/\n  display: block;\n  margin-top: 2px;\n  font-size: 0.8em;\n  opacity: 0.6;\n}\n\n</style>\n\n",
    "{#if $device && viewDef && viewDef.sidebar}\n  <!-- if not $connected, we remove top_only_with_background class BECAUSE: it brings transparency and second device name on left side (with red x) is shown below the sidebar... this is ok on home when there is no sidebar but problematic on other views... plus we get rid of background since DATE is missing while process is reloading.. we only have localBrowserTime.. which is written in white and might get unreadable if wallpaper is also white.. but this is the best of all cases! -->\n\n  <div class=\"deviceInfo\" class:foreign=\"!homebase\" class:connectivity_problem=\"$device.connectivityProblem == true\" class:local_connectivity_problem=\"$device.localConnectivityProblem == true\">\n\n    <div class=\"deviceName\" class:connectivity_resumed=\"$device.connectivityResumed\">\n      {#if $device.connectivityProblem || $device.localConnectivityProblem}\n        ✖\n      {/if}\n\n      {$device.deviceName || ''} <span class=\"dev\">{$device.devPanel ? '[DΞV]' : ''}</span> <span class=\"ap_mode\">{$device.apMode ? '(AP)' : ''}</span>\n    </div>\n\n    {#if $device.localConnectivityProblem || $device.localConnectivityResumed}\n      <div class=\"deviceConnectivityStatus\" class:local_connectivity_problem=\"$device.localConnectivityProblem\" class:local_connectivity_resumed=\"$device.localConnectivityResumed\">\n        <!-- DUP -->\n        {#if $device.localConnectivityProblem}\n          Router unreachable\n        {:elseif $device.localConnectivityResumed}\n          Router connection resumed\n        {/if}\n      </div>\n    {/if}\n\n    {#if $device.connectivityProblem || $device.connectivityResumed}\n      <div class=\"deviceConnectivityStatus\" class:connectivity_problem=\"$device.connectivityProblem\" class:connectivity_resumed=\"$device.connectivityResumed\">\n        <!-- DUP -->\n        {#if $device.connectivityProblem}\n          Internet unreachable\n        {:elseif $device.connectivityResumed}\n          Internet connection resumed\n        {/if}\n      </div>\n    {/if}\n\n    {#if viewDef.showIp != 'false'}\n\n      <div class=\"device_ip\">{$device.ip || ''}</div>\n\n      {#if $device.apMode && $device.apInfo}\n        <div class=\"ap_wifi_credentials\">\n          <ApWifiCredentials />\n        </div>\n      {/if}\n\n    {/if}\n\n    {#if $device.wifiAP || $device.apssid}\n      <div class=\"wifi_ap\">{$device.wifiAP || $device.apssid}</div>\n    {/if}\n\n  </div>\n\n  <TimeAndDate {timeDate}/>\n\n{/if}\n\n<script>\n\nimport TimeAndDate from '../../widgets/src/TimeAndDate.html';\nimport ApWifiCredentials from '../../widgets/src/ApWifiCredentials.html';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n  components: {\n    TimeAndDate,\n    ApWifiCredentials\n  },\n};\n\n</script>\n\n<style>\n\n.deviceInfo {\n  padding: 15px 0;\n  font-size: 1.7em;\n  color: white;\n  background-color: #41468F;\n  text-align: center;\n}\n\n.deviceInfo .dev {\n  color: #999;\n  font-size: 0.8em;\n}\n\n.deviceInfo .deviceConnectivityStatus {\n    padding: 0px 5px;\n    text-align: center;\n    cursor: default;\n    font-size: 1.0rem;\n  }\n\n/* DUP  TileBar */\n\n.deviceInfo.local_connectivity_problem\n {\n  background-color: #FF7A2C;\n  color: black;\n}\n\n.deviceInfo.connectivity_problem\n {\n  background-color: #e34042;\n  color: black;\n}\n\n/* DUP  TileBar */\n.deviceName.connectivity_resumed,\n.deviceConnectivityStatus.connectivity_resumed\n {\n  color: var(--dmt-cool-green);\n}\n\n.deviceInfo span.ap_mode {\n  font-weight: bold;\n}\n\n.deviceInfo .ap_wifi_credentials {\n  margin-top: 20px;\n  padding: 0 10px;\n  font-size: 0.7em;\n}\n\n.deviceInfo .wifi_ap {\n  margin-top: 10px;\n  font-size: 0.7rem;\n}\n\n.deviceInfo .device_ip {\n  font-size: 0.5em;\n}\n\n</style>\n",
    "<div id=\"wifi_setup\" class:nonRPi=\"!atRPi\">\n  <!-- {#if dangerZoneVisible} -->\n    <h3>Select an option →</h3>\n\n    <button on:click=\"action('reboot')\" class=\"more_warning\">Reboot</button>\n    {#if $device}\n      {#if $device.apMode}\n        <button on:click=\"action('disableAP')\" class=\"warning\" class:touch_pressed=\"touchInfo == 'ap_mode_disable'\">Set Wifi Mode & Reboot</button>\n      {:else}\n        <button on:click=\"action('enableAP')\" class=\"warning\" class:touch_pressed=\"touchInfo == 'ap_mode_enable'\">Set AP Mode & Reboot</button>\n      {/if}\n\n      <button on:click=\"action('shutdown')\" class=\"warning\" class:touch_pressed=\"touchInfo == 'shutdown'\">Shutdown</button>\n    {/if}\n\n  <!-- {:elseif dangerZoneButtonVisible}\n    <h3>Wifi vs AP mode:</h3>\n    <button on:click=\"action('show_danger_zone')\" class:touch_pressed=\"touchInfo == 'show_danger_zone'\">Show options</button>\n  {/if} -->\n\n  {#if msg}\n    <h3>{msg}</h3>\n  {/if}\n\n  <!-- {#if !msg && $device}\n\n    {#if $device.devMachine && !$device.apMode}\n      <h3>Set wifi network:</h3>\n\n      <h4>Choose network:</h4>\n\n      <h4>Set password</h4>\n      <input class=\"search_input\" bind:value=wifiPassword on:keyup=\"inputChanged()\" placeholder=\"Wifi password\">\n    {/if}\n\n  {/if} -->\n\n</div>\n\n<script>\n\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.set({ wifiPassword: '' })\n\n    this.set({ dangerZoneVisible: false, dangerZoneButtonVisible: true, updateButtonVisible: true });\n  },\n  ondestroy() {\n  },\n  methods: {\n    inputChanged() {\n      console.log(\"Typed ...\");\n    },\n    action(action) {\n      this.set({ touchInfo: action });\n      setTimeout(() => this.set({ touchInfo: undefined }), 50);\n\n      // local view actions\n      if(action == 'show_danger_zone') {\n        const msg = \"Please select carefully ...\";\n        this.set({ dangerZoneButtonVisible: false, msg });\n        setTimeout(() => {\n          this.set({ dangerZoneVisible: true });\n          setTimeout(() => this.set({ dangerZoneVisible: false, dangerZoneButtonVisible: true, msg: undefined }), 7000)\n        }, 500)\n\n        return\n      }\n\n      const msg = action == 'shutdown' ? \"Shutting down ...\" : \"Device rebooting, please wait ...\"\n      this.set({ dangerZoneVisible: false, dangerZoneButtonVisible: false, msg })\n      // the other timeout will still show the button after 7s but it's ok... reboot should already have heppened (almost)\n      // even if we see the buttons, it's ok.. what if the reboot doesn't actually succeed, it's better to show the default options\n\n      // otherwise forward to the view store\n      console.log(`sending: ${action}`);\n      this.store.signal('action', { action, scope: 'device' });\n    }\n  },\n  helpers: {\n  },\n  computed: {\n  }\n};\n</script>\n\n<style>\n\n#wifi_setup {\n  margin-top: 10px;\n  font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n  width: 40%;\n  float: left;\n}\n\n#wifi_setup.nonRPi button:hover {\n  opacity: 0.8;\n}\n\n.touch_pressed {\n  text-decoration: underline;\n}\n\nbutton {\n  display: inline-block;\n  margin: 0 auto;\n  background-color: #484E9F;\n  border: 0;\n  color: black;\n  font-size: 1.0em;\n  cursor: pointer;\n  height: 2em;\n  color: white;\n  border-radius: 5px;\n}\n\nbutton.warning, button.more_warning {\n  padding: 0 15px;\n}\n\nbutton.warning {\n  background-color: #E12154;\n}\n\nbutton.more_warning {\n  background-color: #9D008E;\n}\n\n</style>\n",
    "{#if $player}\n\n  <div id=\"ribbon\">\n\n    {#if $player}\n\n      {#if !selectMedia && $device && !$device.apMode}\n        <div class=\"section\">\n          <div class=\"title media_select\">Media select</div>\n          <div class=\"options\">\n            <div class=\"option\" on:click=\"selectMedia('radio')\">Net Radio</div>\n          </div>\n        </div>\n      {/if}\n\n      {#if selectMedia == 'radio'}\n        <div class=\"section\">\n          <div class=\"title\">Internet radio station:</div>\n          <div class=\"options\">\n            <div class=\"option\" on:click=\"playRadio('jazz')\">Jazz</div>\n            <div class=\"option\" on:click=\"playRadio('rock')\">Rock</div>\n            <!-- <div class=\"option\" on:click=\"playRadio('christmas')\">Christmas</div> -->\n            <div class=\"option\" on:click=\"playRadio('classical')\">Classical</div>\n            <!-- <div class=\"option\" on:click=\"playRadio('ambient')\">Ambient</div> -->\n            <div class=\"option\" on:click=\"playRadio('progressive-trance')\">Psytrance</div>\n            <!-- <div class=\"option\" on:click=\"playRadio('goa-trance')\">Goa trance</div> -->\n            <div class=\"option close\" on:click=\"close()\">Close</div>\n          </div>\n        </div>\n      {/if}\n\n      {#if $player.isStream}\n        <div class=\"section\">\n          <div class=\"title media_select\">Radio options</div>\n          <div class=\"options\">\n            {#if $player.currentMedia && $player.currentMedia.songPath}\n              <div class=\"option quit\" on:click=\"action('stop')\">Quit Radio</div>\n            {/if}\n          </div>\n        </div>\n      {:else}\n\n        {#if selectMedia != 'radio'} <!-- if we're not browsing radio stations -->\n\n          <!-- STOP, SIMILAR -->\n          {#if $playlist && $playlist.length > 0}\n            <div class=\"section\">\n              <div class=\"title\">Current entry</div>\n              <div class=\"options\">\n                {#if $playlist.length > 1}\n                  <div class=\"option similar\" on:click=\"action('similar')\">Similar</div>\n                {/if}\n\n                {#if $player.currentMedia && $player.currentMedia.songPath}\n                  <div class=\"option\" on:click=\"action('stop')\">■ Stop</div>\n                {/if}\n              </div>\n            </div>\n\n            {#if $device && $device.network == 'zaboric'}\n              <!-- duplicate with dmt mobile! -->\n              {#if ['balkon', 'dnevna', 'spalnica'].includes($device.deviceName)}\n              <!-- ⚠️⚠️⚠️⚠️ TODO: add filter based on zaboric network and relevant 3 devices -->\n                <div class=\"section\">\n                  <div class=\"title\">Customize playlist</div>\n                  <div class=\"options\">\n                    <div class=\"option\" on:click=\"customizePlaylist('andreja')\">Andreja</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('david')\">David</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('irma')\">Irma</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('otroci')\">Otroci</div>\n                  </div>\n                </div>\n              {:elseif $device.deviceName == 'televizija'}\n                <div class=\"section\">\n                  <div class=\"title\">Customize playlist</div>\n                  <div class=\"options\">\n                    <div class=\"option\" on:click=\"customizePlaylist('wolfoo')\">Wolfoo</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('babyzoo')\">BabyZoo</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('booba')\">Booba</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('simsala')\">Simsala</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('mickey mouse')\">Mickey Mouse</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('looloo')\">Looloo</div>\n                    <div class=\"option\" on:click=\"customizePlaylist('cartoons slosinh')\">Slo risanke</div>\n                  </div>\n                </div>\n              {/if}\n            {/if}\n          {/if}\n        {/if}\n      {/if}\n\n    {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {\n    //this.store.entangle(this);\n    this.scope = 'player';\n  },\n  methods: {\n    selectMedia(mediaSourceOption) {\n      this.set({ selectMedia: mediaSourceOption })\n\n      if(mediaSourceOption == 'browse' || mediaSourceOption == 'search') {\n        this.defaultRibbonState();\n        this.fire('mediaSourceOption', { mediaSourceOption })\n      }\n    },\n    close() {\n      this.defaultRibbonState();\n    },\n    defaultRibbonState() {\n      this.set({ selectMedia: undefined })\n    },\n    action(action, payload) {\n      //this.set({ touchAction: action })\n      //setTimeout(() => this.set({ touchAction: undefined }), 50); // give it some (exact) time to be visible! it's too short otherwise (even if we put it after the action trigger (because this is very fast))\n      this.store.signal('action', { action, scope: this.scope, payload });\n      this.defaultRibbonState();\n    },\n    customizePlaylist(tag) {\n      this.action('sublist', { tag });\n    },\n    playRadio(radioId) {\n      this.action('play_radio', { radioId });\n      //this.defaultRibbonState();\n    }\n  }\n};\n</script>\n\n<style>\n\n#ribbon {\n  /*position: absolute;\n  bottom: 0;*/\n  height: calc(var(--player-ribbon-height) - 10px);\n  display: flex;\n  align-items: center;\n}\n\n.section {\n  display: inline-block;\n  text-align: center;\n  padding-left: 15px;\n}\n\n.section .title {\n  padding-bottom: 4px;\n  border-bottom: 1px dotted #888;\n  margin-bottom: 7px;\n}\n\n.section .title.selected_entries {\n  color: #D1AFFF;\n}\n\n.section .title.media_select {\n  color: #2FA9BC;\n}\n\n.options {\n  display: inline-flex;\n  align-items: center;\n}\n\n.option {\n  width: 100px;\n  height: 40px;\n  border-radius: 10px;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 7px;\n}\n\n.option:last-child {\n  margin-right: 0;\n}\n\n.option.close, .option.deselect, .option.quit {\n  color: #9D82BD;\n}\n\n.option.similar {\n  /*color: #93F073;*/\n  /*color: #99EFBF;\n  color: #ECDC7D;*/\n}\n\n.option.play_now {\n  /*color: #26A9B7;*/\n  color: #40EBB2;\n  /*color: #D1AFFF;*/\n}\n\n.option.set_next {\n  color: #8DD5DB;\n  /*color: #26A9B7;*/\n  /*color: #40EBB2;*/\n  /*color: #D1AFFF;*/\n}\n\n.option.remove {\n  color: var(--warning);\n}\n\n.option:hover {\n  cursor: pointer;\n  opacity: 0.8;\n}\n\n</style>\n",
    "{#if $player}\n\n  <div id=\"ribbon\">\n\n    {#if $player.hasMissingMedia && !$player.isStream}\n\n      <div class=\"section missing_media\">\n        <div class=\"title\">Media is missing</div>\n        <div class=\"options\">\n          <div class=\"option\" on:click=\"action('remove_missing_media')\">Remove {$playlistMetadata.numberOfMissingMedia} missing</div>\n        </div>\n      </div>\n\n    {/if}\n\n    {#if $player}\n\n      {#if $playlistMetadata.playlistHasSelectedEntries || $playlistMetadata.playlistClipboard}\n        <div class=\"section\">\n          {#if $playlistMetadata.playlistHasSelectedEntries}\n            <div class=\"title selected_entries\">Selected entries ({$playlistMetadata.playlistSelectedCount})</div>\n          {:elseif $playlistMetadata.playlistClipboard}\n            <div class=\"title selected_entries\">Undo {$playlistMetadata.playlistClipboard} item{$playlistMetadata.playlistClipboard > 1 ? 's' : ''}?</div>\n          {/if}\n\n          <div class=\"options\">\n            {#if $playlistMetadata.playlistHasSelectedEntries}\n              <div class=\"option play_now\" on:click=\"playNow()\">Play Now</div>\n              <div class=\"option set_next\" on:click=\"setNext()\">◈ Set Next</div>\n              <div class=\"option remove\" on:click=\"cut()\">✖ Remove</div>\n              <div class=\"option deselect\" on:click=\"deselectAll()\">Cancel</div>\n            {:elseif $playlistMetadata.playlistClipboard}\n              <div class=\"option\" on:click=\"paste()\">Undo</div>\n            {/if}\n          </div>\n        </div>\n      {/if}\n\n    {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {\n    this.scope = 'player';\n  },\n  methods: {\n    selectMedia(mediaSourceOption) {\n      this.set({ selectMedia: mediaSourceOption })\n\n      if(mediaSourceOption == 'browse' || mediaSourceOption == 'search') {\n        this.defaultRibbonState();\n        this.fire('mediaSourceOption', { mediaSourceOption })\n      }\n    },\n    close() {\n      this.defaultRibbonState();\n    },\n    defaultRibbonState() {\n      this.set({ selectMedia: undefined })\n    },\n    setNext() {\n      this.action('set_next');\n    },\n    playNow() {\n      this.setNext();\n      this.action('next');\n    },\n    cut() {\n      this.action('cut_selected');\n    },\n    paste() {\n      this.action('paste');\n    },\n    deselectAll() {\n      this.action('deselect_all');\n    },\n    action(action, payload) {\n      this.store.signal('action', { action, scope: this.scope, payload });\n      this.defaultRibbonState();\n    },\n    playRadio(radioId) {\n      this.action('play_radio', { radioId });\n    }\n  },\n\n  components: {\n\n  }\n};\n</script>\n\n<style>\n\n#ribbon {\n  height: calc(var(--player-ribbon-height) - 10px);\n  display: flex;\n  align-items: center;\n}\n\n.section {\n  display: inline-block;\n  text-align: center;\n  padding-left: 15px;\n}\n\n.section .title {\n  padding-bottom: 4px;\n  border-bottom: 1px dotted #888;\n  margin-bottom: 7px;\n}\n\n.section .title.selected_entries {\n  color: #D1AFFF;\n  color: var(--dmt-orange);\n}\n\n.section .title.media_select {\n  color: #2FA9BC;\n}\n\n.options {\n  display: inline-flex;\n  align-items: center;\n}\n\n.section.missing_media .option {\n  width: 150px;\n}\n\n.section.missing_media .title {\n  color: var(--warning);\n}\n\n.option {\n  width: 100px;\n  height: 40px;\n  border-radius: 10px;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 7px;\n}\n\n.option:last-child {\n  margin-right: 0;\n}\n\n.option.close, .option.deselect, .option.quit {\n  color: #9D82BD;\n}\n\n.option.play_now {\n  color: #40EBB2;\n}\n\n.option.set_next {\n  color: #8DD5DB;\n}\n\n.option.remove {\n  color: var(--warning);\n}\n\n.option:hover {\n  cursor: pointer;\n  opacity: 0.8;\n}\n\n</style>\n",
    "<div id=\"sensors_json_view\">\n  <pre>{@html colorJSON(sensors)}</pre>\n</div>\n\n<div id=\"sensors\">\n  <p>\n    Sensors on local network: {Object.keys(sensors).length}\n  </p>\n\n  {#each Object.keys(computedSensorsByType) as sensorType}\n    <h2>{sensorType}</h2>\n\n    {#each computedSensorsByType[sensorType] as sensor}\n      <div class=\"sensor_info\">\n        <h3>{sensor.id}</h3>\n\n        {#if sensor.error}\n          <span class=\"error\">Sensor reading error...</span>\n        {/if}\n\n        <p>\n          LAST UPDATE:\n\n          {#if sensor.updateRelativeTime}\n            {sensor.updateRelativeTime} ago\n          {:else}\n            <span>now</span>\n          {/if}\n        </p>\n      </div>\n    {/each}\n  {/each}\n</div>\n\n<script>\n\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    //this.store.entangle(this);\n\n    const tick = () => {\n      const now = Date.now();\n      this.set({ now });\n      this.timeout = setTimeout(tick, 1000);\n    }\n\n    tick();\n  },\n  ondestroy() {\n    clearTimeout(this.timeout);\n  },\n  helpers: {\n    colorJSON(text) {\n      return util.colorJSON(text)\n    }\n  },\n  computed: {\n    sensorIds: ({ sensors }) => {\n      return Object.keys(sensors).sort()\n      // console.log(sensors);\n      // // if(deviceState) {\n      //   return Object.keys(deviceState.nearbySensors).length\n      // }\n    },\n\n    computedSensorsByType: ({ sensors, now }) => {\n\n      const types = util.unique(Object.values(sensors).map(sensorInfo => sensorInfo.type)).sort();\n\n      const computedSensors = {}\n\n      for(const type of types) {\n        computedSensors[type] = [];\n      }\n\n      for(const sensorId of Object.keys(sensors).sort()) {\n\n        const sensorInfo = sensors[sensorId];\n\n        const relTime = util.humanTime(util.msIntoTimeSpan(now - sensorInfo.lastUpdateAt))\n\n        const computedInfo = {\n          id: sensorId,\n          error: sensorInfo.error,\n          updateRelativeTime: relTime\n        }\n\n        computedSensors[sensorInfo.type].push(computedInfo);\n      }\n\n      return computedSensors;\n      // console.log(sensors);\n      // // if(deviceState) {\n      //   return Object.keys(deviceState.nearbySensors).length\n      // }\n    }\n\n  }\n};\n</script>\n\n<style>\n\n#sensors_json_view pre {\n  font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n  width: 30%;\n  float: left;\n}\n\n#sensors {\n  margin-top: 10px;\n  font-family: \"Inconsolata\", \"Courier New\", Courier, monospace;\n  width: 40%;\n  float: left;\n}\n\n#sensors h2 {\n  color: var(--dmt-violet);\n}\n\n#sensors h3 {\n  color: var(--dmt-cyan);\n}\n\n.sensor_info span.error {\n  color: var(--dmt-red);\n}\n\n.sensor_info span {\n  color: var(--dmt-vibrant-green);\n}\n\n</style>\n",
    "<div id=\"suntime\">\n  {#if sunrise}\n    <div id=\"sunrise\" class:protect_visibility=\"viewDef && viewDef.protectVisibility && (!$player || $player.paused)\">\n      <div class=\"inner\">\n        {#if sunriseImgInline}\n          <img src=\"{sunriseImgInline}\" alt=\"sunrise\">\n        {/if}\n        <span>{sunrise}</span>\n      </div>\n    </div>\n  {/if}\n\n  {#if sunset}\n    <div id=\"sunset\" class:protect_visibility=\"viewDef && viewDef.protectVisibility && (!$player || $player.paused)\">\n      <div class=\"inner\">\n        {#if sunsetImgInline}\n          <img src=\"{sunsetImgInline}\" alt=\"sunset\">\n        {/if}\n        <span>{sunset}</span>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<script>\n  // via rollup-plugin-image-base64\nimport sunriseImgInline from '../../common_assets/img/icons/sunrise.png';\nimport sunsetImgInline from '../../common_assets/img/icons/sunset.png';\n\nexport default {\n  oncreate() {\n    this.set({ sunriseImgInline, sunsetImgInline });\n\n    this.store.entangle(this);\n  }\n};\n</script>\n\n<style>\n#sunrise, #sunset {\n  text-align: center;\n  color: white;\n  font-size: 30px;\n  height: 50px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n#sunrise {\n  position: absolute;\n  padding: 0 15px;\n  left: 0;\n  bottom: 0;\n}\n\n#sunrise.protect_visibility, #sunset.protect_visibility {\n  background-color: #222;\n  opacity: 0.8;\n}\n\n#sunrise.protect_visibility {\n  border-top-right-radius: 20px;\n}\n\n#sunset.protect_visibility {\n  border-top-left-radius: 20px;\n}\n\n#sunrise .inner {\n  padding-top: 2px;\n}\n\n#sunrise span {\n  padding-left: 5px;\n}\n\n#sunset {\n  position: absolute;\n  padding: 0 15px;\n  right: 0;\n  bottom: 0;\n  color: #dc8430;\n}\n\n#sunset .inner {\n  padding-top: 10px;\n}\n\n#sunrise img {\n  height: 35px;\n}\n\n#sunset img {\n  height: 30px;\n}\n\n#sunset span {\n  padding-left: 5px;\n}\n</style>\n",
    "{#if tempData}\n  <div id=\"environment_wrapper\" class:big=\"big\">\n\n    {#if tempData.sensorId}\n      <div class=\"title\">{tempData.sensorId}</div>\n    {/if}\n\n    <div id=\"environment\">\n      <div id=\"temp\" style={styles(tempData)} >\n        <span class=\"direction\">{tempData.tempDirection && tempData.tempDirection.symbol ? tempData.tempDirection.symbol : ''}</span>{tempData.temperature}°{tempData.tempUnit}\n      </div>\n      <div id=\"humidity\">{tempData.humidity}%</div>\n    </div>\n  </div>\n{/if}\n\n<script>\nimport { util } from '../../+legacyLib';\nexport default {\n  helpers: {\n    styles: (el) => getStyles(el),\n    util\n  }\n};\n\nconst getStyles = ({ color = 'black', bgColor = 'white' }) => (\n  `\n    color: ${color};\n    background-color: ${bgColor};\n  `\n);\n\n</script>\n\n<style>\n#environment_wrapper {\n  width: 100%;\n}\n\n.title {\n  /**/\n  /*width: 120px;*/\n  width: 100%;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  color: #abfff6;\n  text-align: center;\n}\n\n#environment {\n  display: flex;\n  justify-content: center;\n  opacity: 0.8;\n}\n\n#temp {\n  /*color: #222;*/\n  font-size: 3em;\n  height: 62px;\n  /*font-size: 2.5em;*/\n  padding: 5px 20px 0px 20px;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n}\n\n#environment_wrapper.big #temp, #environment_wrapper.big #humidity {\n  height: 125px;\n  font-size: 6.5em;\n}\n\n#humidity {\n  color: #ddd;\n  font-size: 3em;\n  height: 62px;\n  /*font-size: 2.5em;*/\n  padding: 5px 20px 0px 20px;\n  background-color: #444;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n}\n\n#environment .direction {\n  color: #777;\n}\n</style>\n",
    "{#if $player && $player.currentMedia}\n\n  <div id=\"timeposition\" ref:timeposition on:click=\"seek(event)\" class:bottom_slim_wide=\"$view != 'player'\" class:bottom_slim_times_visible=\"$view == 'clock'\">\n\n    <div ref:progress class=\"progress\"></div>\n\n    {#if $player.timeposition}\n      {#if false && $player.isStream}\n        <div class=\"streaming_notice\">\n          STREAMING\n          {#if $player.paused}\n            PAUSED\n          {:else}\n            <span class=\"time_current\">{util.songTime(Math.floor($player.timeposition))}</span>\n          {/if}\n        </div>\n      {:else}\n        <div class=\"time_current\">{util.songTime(Math.floor($player.timeposition))}</div> <!-- Math.floor -> nyquist frequency is 500ms but current position still \"jumpy\" if we round the value instead of just taking the floor... we then actually show each starting second... it's ok... -->\n      {/if}\n    {/if}\n\n    {#if $player.currentMedia.duration}\n      <div class=\"time_total\">{util.songTime($player.currentMedia.duration)}</div>\n    {/if}\n  </div>\n\n{/if}\n\n<script>\n\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.listener = this.store.on('state', ({ current, changed, previous }) => {\n      const { player } = current;\n\n      if(!player) {\n        return;\n      }\n\n      this.set({ isStream: player.isStream })\n\n      const progress = this.refs.progress;\n      const timeposition = this.refs.timeposition;\n\n      if(progress) {\n        if(changed.frontTicker)  {\n          // WHEN PLAYING\n\n          if(player && player.percentposition != null) {\n            const percentage = player.percentposition;//100 * player.timeposition / player.currentMedia.duration;\n            progress.style.width = `${percentage}%`;\n          } else {\n            progress.style.width = \"0%\";\n          }\n\n          if(!player.paused && player.currentMedia && player.currentMedia.songPath) {\n            //todo: when in bottom_wide mode perhaps use #444 (and correct opacity from 0.2 to 0.5 on .progress)\n            //progress.style.background = \"#aaa\";\n            let bgColor = \"#45FFB9\";\n            if(player.timeLimit) {\n              bgColor= \"#66AEB7\";\n            } else if(player.limit && !player.isStream) {\n              bgColor = \"#B6E29E\";\n            }\n            progress.style.background = bgColor;\n          } else {\n            progress.style.background = \"#444\";\n          }\n\n          if(player.currentMedia && player.currentMedia.songPath && !player.paused) {\n            timeposition.style.cursor = 'pointer';\n          } else {\n            timeposition.style.cursor = 'default';\n          }\n        }\n      }\n    });\n  },\n  methods: {\n    seek(e) {\n      // if(!this.get().isStream) {\n        const timeposition = this.refs.timeposition;\n        const percentPos = e.offsetX / timeposition.offsetWidth;\n        this.fire('seek', { percentPos })\n      // }\n    }\n  },\n  ondestroy() {\n    this.listener.cancel();\n  },\n  helpers: {\n    util\n  }\n};\n</script>\n\n<style>\n:root {\n  --normal-timeposition-height: 30px;\n  --slim-timeposition-height: 3px;\n}\n\n#timeposition {\n  height: var(--normal-timeposition-height);\n\n  background-color: #333;\n\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 525px;\n  /*color: #626262;*/\n  font-weight: bold;\n  padding: 0 7px;\n  margin-bottom: 15px;\n\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n/*  border-radius: 10px;*/\n}\n\n#timeposition.bottom_slim_wide {\n  height: var(--slim-timeposition-height);\n\n  background-color: transparent;\n\n  width: 100%;\n  padding: 0;\n  margin: 0;\n\n  position: absolute;\n  left: 0;\n  bottom: 0;\n}\n\n#timeposition .progress {\n  height: var(--normal-timeposition-height);\n\n  width: 0%;\n\n  position: absolute;\n  left: 0px;\n  top: 0px;\n\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n\n/*  border-radius: 10px;*/\n}\n\n#timeposition.bottom_slim_wide .progress {\n  opacity: 0.2;\n}\n\n#timeposition.bottom_slim_wide .progress {\n  height: var(--slim-timeposition-height);\n}\n\n#timeposition.bottom_slim_wide .time_current,\n#timeposition.bottom_slim_wide .time_total,\n#timeposition.bottom_slim_wide .streaming_notice,\n#timeposition.bottom_slim_wide .spaced_time_remaining {\n  display: none;\n}\n\n#timeposition .time_current {\n  z-index: 10000;\n  pointer-events: none;\n  color: #626262;\n}\n\n#timeposition .time_total {\n  z-index: 10000;\n  margin-left: auto;\n  order: 2;\n  pointer-events: none; /* prevent wrong read of time position (we have to read div, not click on this text) */\n}\n\n#timeposition.bottom_slim_times_visible .time_current,\n#timeposition.bottom_slim_times_visible .time_total {\n  display: block;\n  font-size: 1.4em;\n  margin-bottom: 48px;\n}\n\n#timeposition.bottom_slim_times_visible .time_current {\n  margin-left: 10px;\n}\n\n#timeposition.bottom_slim_times_visible .time_total {\n  margin-right: 10px;\n}\n\n.streaming_notice {\n  color: #26A9B7;\n}\n\n.streaming_notice span {\n  margin-left: 10px;\n}\n\n#timeposition .spaced_time_remaining span {\n  color: #A393FF;\n}\n\n</style>\n",
    "{#if loaded && $thisDeviceState && $thisDeviceState.time}\n\n  <div id=\"clock\">\n\n    <div id=\"time\">\n      {#if $thisDeviceState.connected && !$thisDeviceState.device.serverMode} <!-- should we check if controller exists here? -->\n        <Time time={timeDate.time}/>\n      {:else}\n        {#if _demoTime}\n          {_demoTime}\n        {:else}\n          <Time time={$localBrowserTime}/>\n        {/if}\n      {/if}\n    </div>\n\n    <div id=\"date\">\n      {#if $thisDeviceState.connected && !$thisDeviceState.device.serverMode} <!-- should we check if controller exists here? -->\n        <span>{(timeDate.dow) || ''}</span> {(timeDate.date) || ''}\n      {/if}\n\n      {#if $thisDeviceState.connected == false}\n        <div class=\"disconnected\">disconnected</div>\n        <div class=\"disconnected_explain\">\n          (<span>dmt-proc</span> on <span>{$thisDeviceState.device.deviceName}</span> is down)\n        </div>\n      {/if}\n    </div>\n\n    {#if !$guiNotifications || ($guiNotifications && $guiNotifications.length == 0)}\n      <Calendar />\n    {/if}\n\n  </div>\n\n{/if}\n\n<script>\n\nimport Time from './Time.html';\nimport Calendar from '../../widgets/src/Calendar.html';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n\n    // doing this in oncreate -- we have to be careful\n    // elements that we're manipulating have to be permanent... we cannot remove and re-add them based on some criteria (for example $connected)\n    const el = document.getElementById(\"clock\");\n    if(el && el.offsetWidth <= 300) {\n      document.getElementById(\"time\").style.fontSize = \"4.5em\";\n      document.getElementById(\"date\").style.fontSize = \"2.5em\";\n      document.getElementById(\"date\").style.marginTop = \"5px\";\n    }\n  },\n  components: {\n    Time,\n    Calendar\n  }\n};\n</script>\n\n<style>\n\n#clock {\n  /*color: #dedede;*/\n  color: white;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n#time {\n  font-size: 11em;\n}\n\n#date {\n  margin-top: 15px;\n  font-size: 5em;\n  color: white;\n}\n\n#date span {\n  color: #abfff6;\n}\n\n.disconnected {\n  color: white;\n  display: inline-block;\n  padding: 0 10px;\n  border-radius: 5px;\n  background-color: #e34042;\n}\n\n#date div.disconnected_explain {\n  font-size: 0.4em;\n}\n\n</style>\n",
    "{#if isDevUser}\n  <div id=\"iot_actions_wrapper\">\n    <div class=\"action\" on:click=\"action('on')\">ON</div>\n    <div class=\"action\" on:click=\"action('off')\">OFF</div>\n  </div>\n{/if}\n\n<script>\nimport { util } from '../../+legacyLib';\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n  helpers: {\n    util\n  },\n  methods: {\n    action(action) {\n      this.store.signal('action', { action, scope: 'light-lab' })\n      // handled in user engine labLight.js\n    }\n  }\n};\n</script>\n\n<style>\n#iot_actions_wrapper {\n  margin-top: 50px;\n  margin-left: 50px;\n}\n\n.action {\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  background-color: #444;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  font-size: 1.2em;\n  width: 100px;\n}\n\n.action:hover {\n  background-color: #555;\n}\n</style>\n",
    "<svg viewBox='-50 -50 100 100'>\n  <circle class='clock-face' r='48'/>\n\n  <!-- markers -->\n  {#each [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] as minute}\n    <line\n      class='major'\n      y1='40'\n      y2='45'\n      transform='rotate({30 * minute})'\n    />\n\n    {#each [1, 2, 3, 4] as offset}\n      <line\n        class='minor'\n        y1='42'\n        y2='45'\n        transform='rotate({6 * (minute + offset)})'\n      />\n    {/each}\n  {/each}\n\n  <!-- hour hand -->\n  <line\n    class='hour'\n    y1='2'\n    y2='-20'\n    transform='rotate({30 * hours + minutes / 2})'\n  />\n\n  <!-- minute hand -->\n  <line\n    class='minute'\n    y1='4'\n    y2='-30'\n    transform='rotate({6 * minutes + seconds / 10})'\n  />\n\n  <!-- second hand -->\n  <g transform='rotate({6 * seconds})'>\n    <line class='second' y1='10' y2='-38'/>\n    <line class='second-counterweight' y1='10' y2='2'/>\n  </g>\n</svg>\n\n<style>\n\n  :root {\n    --clockface: #40469E;\n    --clock-pointers: #2DB6C2;\n    --clock-seconds-pointer: #333;\n\n    /*--clockface: #07D87C;*/\n    --clockface: #2DB6C2;\n    --clock-marks: #2A262A;\n    --clock-marks: #032518;\n    --clock-pointers: #032518;\n    --clock-seconds-pointer: #777;\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    opacity: 0.9;\n  }\n\n  .clock-face {\n    /*stroke: #333;*/\n    stroke: var(--clockface);\n    /*fill: white;*/\n    fill: var(--clockface);\n  }\n  .minor {\n    display: none;\n    /*stroke: #999;*/\n    stroke: var(--clock-marks);\n    stroke-width: 1;\n  }\n  .major {\n    /*stroke: #333;*/\n    stroke: var(--clock-marks);\n    stroke-width: 2;\n  }\n  .hour {\n    /*stroke: #333;*/\n    stroke: var(--clock-pointers);\n    stroke-width: 3;\n  }\n  .minute {\n    /*stroke: #666;*/\n    stroke: var(--clock-pointers);\n    stroke-width: 2;\n  }\n  .second, .second-counterweight {\n    /*display: none;*/\n    stroke: var(--clock-seconds-pointer);\n    /*stroke: rgb(180,0,0);*/\n    /*stroke: var(--clockface);*/\n  }\n  .second-counterweight {\n    stroke-width: 3;\n  }\n</style>\n\n<script>\n  function getTime() {\n    const time = new Date();\n\n    return {\n      hours: time.getHours(),\n      minutes: time.getMinutes(),\n      seconds: time.getSeconds()\n    }\n  }\n\n  // original: https://github.com/sveltejs/v2.svelte.dev/blob/master/content/examples/svg-clock/App.html\n  // had to rework state a bit because for some reason it didn't work ok in production (Rotate(NaN) error)\n  // when using computed() properties\n  export default {\n    data() {\n      return getTime();\n    },\n    oncreate() {\n      const update = () => {\n        this.set(getTime());\n        this.timer = setTimeout(update, 1000)\n      }\n\n      update();\n    },\n    ondestroy() {\n      clearTimeout(this.timer);\n    }\n  };\n</script>\n",
    "{#if $thisDeviceState && $thisDeviceState.connected && $thisDeviceState.peerlist && $thisDeviceState.peerlist.length > 0}\n  <!-- FUGLY -- will be easier in svelte 3!-->\n  {#if $thisDeviceState.peerlist.find(({ ready }) => !showPeerOnlyIfDisconnected || (showPeerOnlyIfDisconnected && !ready))}\n    <div id=\"peerlist\">\n\n      <!-- \"detailed is currently not used\" -->\n\n      {#each $thisDeviceState.peerlist as { deviceTag, ready, versionCompareSymbol, peerState }}\n        <!-- on other views than home we only show peers if there is a problem! -->\n        {#if !showPeerOnlyIfDisconnected || (showPeerOnlyIfDisconnected && !ready)}\n          <div class=\"peer\" class:ready='ready == true'>\n            <span class=\"ok\">ok</span>\n            <span class=\"cross\">✖</span>\n            {deviceTag}\n            {#if peerState}\n              {#if peerState.dmtVersion}\n                <span class=\"dmt_version\">\n                  {#if detailed}\n                    {peerState.dmtVersion}\n                  {/if}\n                </span>\n              {/if}\n            {/if}\n          </div>\n        {/if}\n      {/each}\n    </div>\n  {/if}\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {},\n  methods: {\n    peersToShow(peerlist, showPeerOnlyIfDisconnected) {\n      return peerlist.filter(({ ready }) => !showPeerOnlyIfDisconnected || (showPeerOnlyIfDisconnected && !ready));\n    }\n  }\n};\n</script>\n\n<style>\n\n#peerlist {\n  margin-top: 20px;\n  font-size: 1.0em;\n  opacity: 0.8;\n  background-color: #070D0B;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  padding: 5px 10px;\n}\n\n.peer {\n  text-align: left;\n  margin: 0 auto;\n  color: #777;\n  /*padding-left: 10px;*/\n}\n\n.peer.ready {\n  color: white;\n}\n\n.peer .dmt_version {\n  font-size: 0.8em;\n  /*color: #888;*/\n  color: var(--dmt-bright-cyan);\n}\n\n.ok, .cross {\n  width: 20px;\n  text-align: center;\n  display: inline-block;\n}\n\n.ok {\n  display: none;\n  color: var(--dmt-cool-green);\n}\n\n.line {\n  color: #E03434;\n}\n\n.peer.ready .ok {\n  display: inline-block;\n}\n\n.peer.ready .cross {\n  display: none;\n}\n\n</style>\n",
    "{#if loaded}\n\n  {#if $connected && $device}\n\n    <div class=\"nearby_handy_links\" class:nonRPi=\"!atRPi\">\n\n      {#if thisDeviceName != selectedDeviceName}\n\n        <div class=\"device\">\n          <button on:click=\"switchToThisDevice()\" class=\"home\">\n            <!-- todo: refactor to get playdata from $player directly -->\n\n            {#if $nearbyDevices && getDevice(deviceName, $nearbyDevices) && getDevice(deviceName, $nearbyDevices).playing}\n              {$nearbyDevices.find(({_deviceName}) => deviceName == _deviceName).mediaType == 'video' ? ' ▶' : ' ♫'}\n            {/if}\n\n            {thisDeviceName}\n          </button>\n        </div>\n\n      {/if}\n\n      {#if !homebase && homebaseName && $nearbyDevices && getDevice(homebaseName, $nearbyDevices)}\n\n        <div class=\"device\">\n          <button on:click=\"switchToDevice(getDevice(homebaseName, $nearbyDevices))\">\n            <!-- todo: refactor to get playdata from $player directly -->\n\n            {#if getDevice(homebaseName, $nearbyDevices).playing}\n              {getDevice(homebaseName, $nearbyDevices).mediaType == 'video' ? ' ▶' : ' ♫'}\n            {/if}\n\n            {homebaseName}\n          </button>\n        </div>\n\n      {/if}\n\n      {#if !disableDeviceSelector && $nearbyDevices && $nearbyDevices.length > 0}\n\n        {#each $nearbyDevices.sort((a, b) => a.deviceName < b.deviceName ? -1 : (a.deviceName > b.deviceName ? 1 : 0)) as device}\n\n          {#if device.deviceName != selectedDeviceName && device.deviceName != thisDeviceName && device.deviceName != homebaseName}\n\n            {#if getDevice(device.deviceName, $nearbyDevices).playing && !getDevice(device.deviceName, $nearbyDevices).hiddenInGui}\n\n              <div class=\"device\">\n                <button on:click=\"switchToDevice(device)\">\n                  {getDevice(device.deviceName, $nearbyDevices).mediaType == 'video' ? ' ▶' : ' ♫'} {device.deviceName}\n                </button>\n              </div>\n\n            {/if}\n\n          {/if}\n\n        {/each}\n\n      {/if}\n\n    </div>\n\n  {/if}\n\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  },\n\n  helpers: {\n    getDevice(_deviceName, nearbyDevices) {\n      //const nearbyDevices = this.get();\n      return nearbyDevices.find(({deviceName}) => deviceName == _deviceName)\n    }\n  },\n\n  methods: {\n    switchToDevice(device) {\n      device.port = device.guiPort;\n      this.store.switch(device);\n    },\n    switchToThisDevice() {\n      this.store.switch();\n    }\n  },\n\n  components: {\n    //\n  }\n};\n</script>\n\n<style>\n\n.nearby_handy_links {\n  padding: 10px;\n  overflow: auto;\n}\n\nbutton {\n  /*width: 50%;*/\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n  float: left;\n  margin-right: 5px;\n  height: 30px;\n  background-color: #BFC1C7;\n  margin-top: 5px;\n}\n\nbutton:active {\n  opacity: 0.9;\n}\n\nbutton.home {\n  background-color: #90A9D1;\n}\n\n.nearby_handy_links.nonRPi button:hover {\n  cursor: pointer;\n  opacity: 0.9;\n}\n\n</style>\n",
    "{#if $device && $device.apMode && $device.apInfo}\n  <div class=\"ap_wifi_info\">\n    <img src=\"{wifiIconInline}\" class=\"wifi_icon\" alt=\"wifi icon\">\n    <div><b>SSID:</b> {$device.apInfo.ssid}</div>\n    <div><b>Pass:</b> {$device.apInfo.password}</div>\n  </div>\n{/if}\n\n<script>\nimport wifiIconInline from '../../common_assets/img/icons/wifi.png';\n\nexport default {\n  oncreate() {\n    this.set({ wifiIconInline });\n  }\n};\n</script>\n\n<style>\n.ap_wifi_info {\n  /* we force left in case parent div has everything centered */\n  text-align: left;\n}\n\n.ap_wifi_info img.wifi_icon {\n  width: 40px;\n  float: left;\n  margin-right: 10px;\n  filter: invert(1);\n}\n</style>\n",
    "{#if $connected && holiday}\n\n  <div id=\"calendar_wrapper\" class:main=\"$view == 'home'\">\n    <div id=\"calendar\">\n        <div id=\"today\"><span></span>{holiday}</div>\n        <!-- danes →  -->\n        <!-- <div id=\"tomorrow\"><span>jutri: </span> dan upora proti okupatorju</div> -->\n    </div>\n  </div>\n\n{/if}\n\n<script>\n\nexport default {\n  oncreate() {\n    this.store.entangle(this);\n  }\n};\n</script>\n\n<style>\n\n#calendar_wrapper {\n  text-align: center;\n}\n\n#calendar {\n  /*color: #ddd;*/\n  /*color: #73DC66;*/\n  /*color: #0FE072;*/\n\n  color: white;\n  color: #abfff6;\n\n  /*width: 500px;*/\n  text-align: center;\n  margin: 0 auto;\n  /*padding-top: 20px;*/\n\n  /*height: 60px;*/\n  border-radius: 15px;\n  display: inline-block;\n\n  /*display: flex;\n  align-items: center;\n  flex-direction: column;*/\n\n  font-size: 1.2em;\n  margin-top: 10px;\n}\n\n#calendar_wrapper.main #calendar {\n  font-size: 2.5em;\n  /*background-color: #444;*/\n  margin-top: 20px;\n  padding: 10px 25px 13px 25px;\n\n}\n\n#calendar div {\n  /*background-color: #ddd;*/\n}\n\n#calendar span {\n  color: #ddd;\n}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}