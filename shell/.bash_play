#!/bin/bash

function vid {
  m "vid" "$@"
}

function m {
  declare -a opts=(
    "info"
    "search"
    "play"
    "pause"
    "add"
    "shuffle"
    "volume"
    "status"
    "list"
    "next"
    "clear"
    "limit"
    "stop"
  )

  # local host=""
  # if [[ "$1" == @* ]]; then
  #   host="$1"
  #   shift
  # fi

  if [ "$1" == "-h" ]; then
    printf "${YELLOW}Usage:${NC}\n"
    printf "${GREEN}${opts[@]}${NC}\n"
    return
  fi

  local video=false

  ## TODO: FIX... instead of "m vid" , pass on the @media=[mediaType] parameter !!
  if [ "$1" == "vid" ]; then
    video=true
    shift
  fi

  #-----------#-----------#----------- A BIT OF DUPLICATE CODE FROM function dmt
  local hosts=""

  local args
  IFS=' ' read -r -a args <<< "$@"

  for arg in "${args[@]}"
  do
    if [ "$arg" == "@all" ]; then
      local network_id=''
      get_current_network network_id
      if [ -n "$network_id" ]; then
        # extract host from @ symbol but replace @all with the name of current network !
        hosts="${hosts} @@$network_id"
        shift
      fi
    elif [[ "$arg" == @* ]] && [[ ! "$arg" =~ = ]]; then # @count=200 etc. these should not be treated as hostnames
      hosts="${hosts} ${arg}"
      shift
    fi
  done

  hosts=$(echo "$hosts" | xargs) # remove trailing whitespace
  #-----------#-----------#-----------

  local matching_opt=''
  opts_matcher matching_opt "$1" "${opts[@]}"
  if [ $? -ne 0 ]; then # error
    matching_opt="info"
  fi

  shift

  local playerCmd="$DMT_NODE_CORE/dmt-player/cli/media.js"

  if [ ! -f "$playerCmd" ]; then # dmt shell before v1.0.79 :::
    playerCmd="$DMT_NODE_CORE/dmt-controller/cli/music.js"
  fi

  if $video; then

    if [ -z "$hosts" ]; then
      node "$playerCmd" "${matching_opt}" "$@" "@media=video"
    else
      node "$playerCmd" "${hosts}" "${matching_opt}" "$@" "@media=video"
    fi

  else

    if [ -z "$hosts" ]; then
      node "$playerCmd" "${matching_opt}" "$@"
    else
      node "$playerCmd" "${hosts}" "${matching_opt}" "$@"
    fi

  fi
}

function save_alsa {
  alsactl --file ~/.config/asound.state store
}

function restore_alsa {
  alsactl --file ~/.config/asound.state restore
}

function mpvc {
  local script="$DMT_SCRIPTS/mpv_control"
  if [ -f "$script" ]; then
    "$script" "$@"
  else
    printf "${RED}missing ${script}${NC}\n"
  fi
}

function pl {
  play "$@"
}

function play {

  #local audio_cmd="mpv --no-video --volume 60"
  local audio_cmd="$DMT_PLATFORM_BIN/music_player"

  # AUDIO
  if [ -z "$1" ] || [ "$1" == "mp3" ] || [ "$1" == "flac" ] || [ "$1" == "ogg" ]; then
    local ext="$1"

    if [ -z "$ext" ]; then
      local count=`ls -1 *.flac 2>/dev/null | wc -l`
      if [ $count -eq 0 ]; then
        count=`ls -1 *.ogg 2>/dev/null | wc -l`
        if [ $count -eq 0 ]; then
          ext="mp3"
        else
          ext="ogg"
        fi
      else
        ext="flac"
      fi
    fi

    eval "$audio_cmd *.$ext"
    return
  fi

  # MOSTLY VIDEO

  local matching_file=''
  get_matching_file matching_file "$1"
  matching_file=$(sed "s/111SINGLE___QUOTE111/'/g" <<< "$matching_file")

  if [ -f "$matching_file" ]; then
    # EXTENSIONS = {
    #   'mkv', 'avi', 'mp4', 'ogv', 'webm', 'rmvb', 'flv', 'wmv', 'mpeg', 'mpg', 'm4v', '3gp'
    # }
    if [[ "$matching_file" =~ (mkv|avi|mp4|webm)$ ]]; then
      printf "${YELLOW}$matching_file${NC}\n"
      #DISPLAY=:0 mpv --fullscreen --no-ytdl "$matching_file"
      DISPLAY=:0 mpv --fullscreen --no-keepaspect --no-ytdl "$matching_file"
      # if is_rpi; then
      #   omxplayer --vol -2000 --aspect-mode stretch -o alsa:hw:0,0 "$matching_file"
      #   #omxplayer --aspect-mode stretch -o alsa:hw:1,0 "$matching_file"
      # else
      #   DISPLAY=:0 mpv --fullscreen --no-ytdl "$matching_file"
      # fi
    elif [[ "$matching_file" =~ (mp3|flac|ogg)$ ]]; then # ADUIO
      printf "${YELLOW}$matching_file${NC}\n"
      eval "$audio_cmd \"$matching_file\""
    fi
  else
    printf "${RED}No matching file${NC}\n"
    # if [[ "$1" =~ youtube ]]; then
    #   DISPLAY=:0 mpv --fullscreen "$1"
    # else
    #   DISPLAY=:0 mpv --fullscreen "https://www.youtube.com/watch?v=$1"
    # fi
  fi
}

function plo {

  # MOSTLY VIDEO

  local matching_file=''
  get_matching_file matching_file "$1"
  matching_file=$(sed "s/111SINGLE___QUOTE111/'/g" <<< "$matching_file")

  if [ -f "$matching_file" ]; then
    if [[ "$matching_file" =~ (mkv|avi|mp4|webm)$ ]]; then
      printf "${YELLOW}$matching_file${NC}\n"
      if is_rpi; then
        omxplayer --vol -2000 --aspect-mode stretch -o alsa:hw:0,0 "$matching_file"
        #omxplayer --aspect-mode stretch -o alsa:hw:1,0 "$matching_file"
      else
        # DISPLAY=:0 mpv --fullscreen --no-ytdl "$matching_file"
        printf "${YELLOW}expected to run on rpi${NC}\n"
      fi
    elif [[ "$matching_file" =~ (mp3|flac|ogg)$ ]]; then # ADUIO
      printf "${YELLOW}$matching_file${NC}\n"
      eval "$audio_cmd \"$matching_file\""
    fi
  else
    printf "${RED}No matching file${NC}\n"
    # if [[ "$1" =~ youtube ]]; then
    #   DISPLAY=:0 mpv --fullscreen "$1"
    # else
    #   DISPLAY=:0 mpv --fullscreen "https://www.youtube.com/watch?v=$1"
    # fi
  fi
}

function soundtest {
  if is_rpi; then
    printf "${GREEN}Soundtest ${MAGENTA}0.${NC}\n"
    aplay "$DMT_PATH/etc/sounds/soundtest/music.wav"
  fi

  which mpv > /dev/null 2>&1

  if [ ! $? -eq 0 ]; then
    printf "${MAGENTA}mpv is missing, please install it....${NC}\n"
    printf "${GRAY}debian linux / raspberrypi${NC} → ${GREEN}sudo apt-get install mpv${NC}\n"
    printf "${GRAY}macos${NC} → ${GREEN}brew install mpv${NC}\n"
    printf "${GRAY}windows${NC} → ${YELLOW}?${NC}\n"
    return
  fi

  #printf "${GREEN}Soundtest ${MAGENTA}1.${NC}\n"
  #mpv --no-video "$DMT_PATH/etc/sounds/soundtest/music.mp3"

  printf "${GREEN}Soundtest ${MAGENTA}1.${NC}\n"
  node "$DMT_NODE_CORE/dmt-controller/lib/player/localMusicPlayer.js"
}


function videotest {
  # if is_rpi; then
  #   printf "${GREEN}Soundtest ${MAGENTA}0.${NC}\n"
  #   aplay "$DMT_PATH/etc/sounds/soundtest/music.wav"
  # fi

  which mpv > /dev/null 2>&1

  if [ ! $? -eq 0 ]; then
    printf "${MAGENTA}mpv is missing, please install it....${NC}\n"
    printf "${GRAY}debian linux / raspberrypi${NC} → ${GREEN}sudo apt-get install mpv${NC}\n"
    printf "${GRAY}macos${NC} → ${GREEN}brew install mpv${NC}\n"
    printf "${GRAY}windows${NC} → ${YELLOW}?${NC}\n"
    return
  fi

  #printf "${GREEN}Videotest ${MAGENTA}1.${NC}\n"
  #mpv "$DMT_PATH/etc/videos/videotest/video.mp4"

  printf "${GREEN}Videotest ${MAGENTA}1.${NC}\n"
  node "$DMT_NODE_CORE/dmt-controller/lib/player/localVideoPlayer.js"
}
