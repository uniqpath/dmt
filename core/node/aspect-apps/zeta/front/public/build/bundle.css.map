{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../index.svelte",
    "../../About.svelte",
    "../../Escape.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { cssBridge, Escape, executeSearch, ansicolor, mediaTypeIcon } from 'dmt-js';\n\n  import { onMount } from 'svelte';\n\n  import About from './components/About.svelte';\n  import Spinner from 'svelte-spinner';\n\n  ansicolor.rgb = {\n    black: [0, 0, 0],\n    darkGray: [180, 180, 180],\n    cyan: [255, 255, 255]\n  };\n\n  export let store;\n\n  const isLocalhost = window.location.hostname == 'localhost';\n  // ugly hack for now:\n  const isZetaSeek = window.location.hostname == 'zetaseek.com';\n\n  let isSearching;\n  let noSearchHits;\n\n  cssBridge.setWallpaper('/apps/zeta/wallpapers/hilly_dark_forest_river_fog.jpg');\n\n  $: searchResults = $store.searchResults;\n  $: connected = $store.connected;\n  $: document.title = $store.deviceName || document.title;\n\n  let searchQuery = '';\n\n  let searchInput;\n\n  onMount(() => {\n    searchInput.focus();\n    setTimeout(() => {\n      searchQuery = document.getElementById('searchInput').value;\n      searchInputChanged();\n    }, 300); // todo: fix -- handle back inside our app ? then read last results from localstorate ?!\n    // when we go back in browser history and search query is kept for us (by default)\n    // we need small delay because otherwiser \"store\" is not yet setup\n  });\n\n  function searchInputChanged() {\n    const remoteObject = store.remoteObject('GUISearchObject');\n    const remoteMethod = 'search';\n\n    const searchStatusCallback = ({ searching, noHits }) => {\n      isSearching = searching;\n      noSearchHits = noHits;\n    };\n\n    if (connected) {\n      executeSearch({ searchQuery, remoteObject, remoteMethod, searchStatusCallback }).then(searchResults => {\n        store.set({ searchResults });\n      }).catch(e => {\n        store.set({ searchResults: { error: e.message } });\n      });\n    }\n  }\n\n  function play(playableUrl) {\n    console.log(`Loading ${playableUrl} into mpv on localhost ...`);\n    store.remoteObject('GUIPlayerObject').call('playUrl', { playableUrl });\n  }\n</script>\n\n<About {store} />\n\n<main>\n\n  {#if isLocalhost}\n    <Escape />\n  {/if}\n\n  <div class=\"logo\">\n    <img src=\"/apps/zeta/img/zeta_logo.png\" alt=\"zeta logo\">\n  </div>\n\n  <p class=\"connection_status\" class:ok={connected}>\n    {$store.deviceName || ''} connected:\n\n    {#if connected}\n      {#if isSearching}\n        <Spinner id=\"search_spinner\" size=\"15\" speed=\"400\" color=\"#fff\" thickness=\"2\" gap=\"40\"/>\n      {:else}\n        ✓\n      {/if}\n    {:else}\n      ✖\n    {/if}\n  </p>\n\n  <div class=\"search\">\n\n    <input id=\"searchInput\" bind:value={searchQuery} bind:this={searchInput} on:keyup={searchInputChanged} on:paste={searchInputChanged} placeholder=\"Please type your query ...\">\n\n    <div class=\"noResults\" class:visible={noSearchHits}>NO RESULTS :( ... Yet ;)</div>\n\n    {#if searchResults}\n\n      {#each searchResults as providerResponse}\n\n        {#if providerResponse.results && providerResponse.results.length > 0}\n\n          <div class=\"results\">\n            <!-- @provider/contentId -->\n            <h3>\n              {providerResponse.meta.providerHost}<span class=\"contentId\">{#if providerResponse.meta.contentId}/{providerResponse.meta.contentId}{/if}</span>\n\n              {#if !providerResponse.error}\n                <span class=\"searchTime\">fs <span class=\"value\">{providerResponse.meta.searchTimePretty}</span>\n                  {#if providerResponse.meta.networkTimePretty}\n                    · network <span class=\"value\">{providerResponse.meta.networkTimePretty}</span>\n                  {/if}\n                </span>\n              {/if}\n\n            </h3>\n\n            {#if providerResponse.error}\n              <div class=\"resultError\">\n              Error:\n                <span>{JSON.stringify(providerResponse.error)}</span>\n              </div>\n            {:else}\n              {#each providerResponse.results as {filePath, name, context, swarmBzzHash, mediaType, entryType, prettyTime, filePathANSI, playableUrl, fiberContentURL, fileSizePretty}}\n                <div class=\"result\">\n\n                  {#if mediaType == 'video'}\n                    <span class=\"tag videoTag\">VIDEO</span>\n                  {/if}\n\n                  {#if mediaType == 'photo'}\n                    <span class=\"tag imageTag\">IMAGE</span>\n                  {/if}\n\n                  {#if mediaType == 'pdf'}\n                    <span class=\"tag pdfTag\">PDF</span>\n                  {/if}\n\n                  {#if swarmBzzHash}\n                    <span class=\"tag swarmTag\">SWARM</span>\n\n                    {#if entryType == 'ens'} <!-- hackish + todo: make sure to update hashes from ENS registry!! -->\n                      <span class=\"tag ensTag\">ENS</span>\n                    {/if}\n\n                    <a href=\"{playableUrl}\">\n                      <b>{name}</b>\n                    </a>\n\n                    {#if prettyTime}\n                      ·\n                      {prettyTime}\n                    {/if}\n\n                    {#if entryType == 'ens'}\n                      ∞\n                    {:else}\n                      ·\n                    {/if}\n\n                    {#if context}\n                      {#if entryType != 'ens'}({/if}{context}{#if entryType != 'ens'}){/if}\n                    {/if}\n\n                    <!-- <a href=\"{playableUrl}\">\n                      {swarmBzzHash}\n                    </a> -->\n                  {:else if filePath}\n                    <a href=\"{playableUrl}\">\n                      {#each ansicolor.parse(filePathANSI).spans as span}<span style=\"{span.css}\">{span.text}</span>{/each}\n                    </a>\n                  {:else}\n                    <div class=\"resultError\">Unsupported search results format.</div>\n                  {/if}\n\n                  {#if mediaType && mediaTypeIcon(mediaType)}\n                    <span class=\"mediaType\">{mediaTypeIcon(mediaType)}</span>\n                  {/if}\n\n                  {#if !isZetaSeek && mediaType == 'music'}\n                    <a class=\"button\" on:click={() => { play(playableUrl); }}>PLAY</a>\n                  {/if}\n\n                  {#if fileSizePretty}\n                    <span>{fileSizePretty}</span>\n                  {/if}\n                </div>\n                <!-- if (totalCount == meta.maxResults) {\n                  explain = ' or more';\n                }\n                console.log(colors.gray(`All results → ${colors.yellow(`${totalCount}${explain}`)}${time}`)); -->\n\n              {:else}\n                NO RESULTS\n              {/each}\n\n              {#if providerResponse.meta.pageNumber}\n                <div class=\"results_count\">Page: <span>{providerResponse.meta.pageNumber}</span>\n                  {#if providerResponse.meta.hasMore}\n                    <a href=\"next_page\">Next page</a>\n                  {/if}\n                </div>\n              {/if}\n            {/if}\n          </div>\n        {/if}\n\n      {/each}\n    {/if}\n\n  </div>\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n    padding-top: 80px;\n\t}\n\n  .logo img {\n    filter: invert(1);\n    width: 200px;\n    margin: 0 auto;\n    margin-bottom: 30px;\n  }\n\n  .results a.button, .results .tag {\n    background-color: #ddd;\n    border-radius: 2px;\n    color: #555;\n    padding: 0 2px;\n  }\n\n  .results .swarmTag {\n    color: #555;\n    background-color: #FFA500;\n  }\n\n  .results .ensTag {\n    background-color: #5284FF;\n    color: white;\n  }\n\n  .results .videoTag {\n    color: white;\n    background-color: #2C581A;\n  }\n\n  .results .imageTag {\n    color: white;\n    background-color: #C76479;\n  }\n\n  .results .pdfTag {\n    color: white;\n    background-color: #575DC9;\n  }\n\n  #searchInput {\n    outline: none;\n    width: 330px;\n    margin: 0 auto;\n  }\n\n  .search {\n    color: white;\n  }\n\n  p.connection_status {\n    color: #777;\n  }\n\n  p.connection_status.ok {\n    color: #fff;\n  }\n\n  .results {\n    padding-top: 5px;\n    line-height: 1.2em;\n    font-size: 0.8em;\n    width: 100%;\n  }\n\n  .results .results_count {\n    margin-top: 5px;\n    font-size: 0.8em;\n    color: #CCC;\n  }\n\n  .results .results_count span {\n    color: white;\n  }\n\n  .results h3 span.contentId {\n    color: #DDD;\n  }\n\n  .results span {\n    color: #DDD;\n  }\n\n  .results span.searchTime {\n    font-size: 0.7em;\n    color: #ddd;\n  }\n\n  .results span.searchTime span.value {\n    color: white;\n  }\n\n  .result {\n    padding: 3px 0;\n  }\n\n  .resultError span {\n    color: #555;\n    background-color: #ddd;\n    padding: 2px;\n  }\n\n  .result .mediaType {\n    opacity: 0.7;\n    color: white;\n  }\n\n  .result a {\n    color: white;\n    text-decoration: underline;\n    text-decoration-style: dotted;\n    padding: 0 2px;\n  }\n\n  .result a:hover {\n    /*color: #FFE8DF;*/\n    color: #FFA500;\n    background-color: #444;\n  }\n\n  a.button:hover {\n    background-color: white;\n    color: black;\n    cursor: pointer;\n  }\n\n  .noResults {\n    display: none;\n    padding: 10px 0;\n  }\n\n  .noResults.visible {\n    display: block;\n  }\n\n  input {\n    width: 300px;\n    color: #222;\n  }\n\n  @media only screen and (max-width: 768px) {\n    main {\n      padding-top: 30px;\n    }\n\n    .logo img {\n      width: 150px;\n      margin-bottom: 10px;\n    }\n\n    .results {\n      font-size: 0.6em;\n    }\n  }\n</style>\n",
    "<script>\n  export let size = 25;\n  export let speed = 750;\n  export let color = 'rgba(0,0,0,0.4)';\n  export let thickness = 2;\n  export let gap = 40;\n  export let radius = 10;\n\n  let dash;\n  $: dash = 2 * Math.PI * radius * (100 - gap) / 100\n</script>\n\n<svg\n  height=\"{size}\"\n  width=\"{size}\"\n  style=\"animation-duration:{speed}ms;\"\n  class=\"svelte-spinner\"\n  viewbox=\"0 0 32 32\"\n>\n  <circle\n    role=\"presentation\"\n    cx=\"16\"\n    cy=\"16\"\n    r=\"{radius}\"\n    stroke=\"{color}\"\n    fill=\"none\"\n    stroke-width=\"{thickness}\"\n    stroke-dasharray=\"{dash},100\"\n    stroke-linecap=\"round\"\n  />\n</svg>\n\n<style>\n  .svelte-spinner {\n    transition-property: transform;\n    animation-name: svelte-spinner_infinite-spin;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n  }\n  @keyframes svelte-spinner_infinite-spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n</style>\n",
    "<script>\n  export let store;\n\n</script>\n\n<div class=\"about\">\n  <b>Zeta</b> <span>PoC v0.1.1</span>\n\n  <p>\n    A new p2p digital era is slowly arriving.\n  </p>\n\n  <p>\n    <b>Zeta</b> is an experimental app built with <a href=\"https://dmt-system.com\">dmt-system</a> and Swarm.\n  </p>\n\n  <p>\n    <a href=\"https://github.com/uniqpath/dmt/tree/master/core/node/aspect-apps/zeta/front\">[zeta frontend code]</a> | <a href=\"https://github.com/uniqpath/dmt/tree/master/core/node\">[dmt backend code]</a>\n  </p>\n</div>\n\n<style>\n.about {\n  width: 350px;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  padding: 10px;\n  color: white;\n  font-size: 0.8em;\n  opacity: 0.8;\n  border-top-left-radius: 10px;\n  color: #232527;\n  background-color: #A4938B;\n  background-color: #D9EBD5;\n}\n\n.about p, .about span {\n  font-size: 0.8em;\n  color: #232527;\n}\n\na {\n  color: white;\n  color: #232527;\n  text-decoration: underline;\n}\n\na:hover {\n  color: #404076;\n}\n\n@media only screen and (max-width: 768px) {\n  .about {\n    display: none;\n  }\n}\n\n</style>\n",
    "<script>\n\n</script>\n\n<div class=\"escape\">\n  <a href=\"/apps\">\n    <!-- <img src=\"/img/zeta_escape.png\" /> -->\n    <img src=\"/img/icons/home.png\" />\n  </a>\n</div>\n\n<style>\n  .escape img {\n    position: absolute;\n    top: 15px;\n    right: 0px;\n    width: 120px;\n    padding: 5px 20px;\n  }\n\n  .escape:hover {\n    opacity: 0.9;\n  }\n\n  @media (max-width: 812px) {\n    .escape {\n      display: none;\n    }\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}